// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegionalResults snapshot(mount) 1`] = `
<WithMap(RegionalResults)
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "1",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "destinationPointSetIds": Array [
        "Jobs_total",
      ],
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Map>
    <div>
      <RegionalResults
        analysis={
          Object {
            "_id": "abcd",
            "accessGroup": "accessGroupName",
            "bounds": Object {},
            "bundleId": "1",
            "complete": true,
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "cutoffMinutes": 60,
            "cutoffsMinutes": Array [
              60,
            ],
            "deleted": false,
            "destinationPointSetIds": Array [
              "Jobs_total",
            ],
            "grid": "Jobs_total",
            "height": 300,
            "name": "ANALYSIS 1",
            "nonce": "12345",
            "north": 20024,
            "projectId": "1",
            "request": Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            },
            "status": "DONE",
            "travelTimePercentile": -1,
            "travelTimePercentiles": Array [
              50,
            ],
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variant": 0,
            "west": 20015,
            "width": 300,
            "workerVersion": "v3.2.0",
            "zoom": 9,
          }
        }
        opportunityDatasets={
          Array [
            Object {
              "_id": "Jobs_total",
              "name": "Total jobs",
            },
          ]
        }
        regionId="MOCK_REGION_ID"
      >
        <ForwardRef
          py={4}
          spacing={4}
        >
          <Flex
            direction="column"
            py={4}
          >
            <Box
              display="flex"
              flexDirection="column"
              py={4}
            >
              <div
                className="css-1crhdyy"
              >
                <FormControl
                  key=".0"
                  mb={4}
                  px={4}
                >
                  <Box
                    mb={4}
                    px={4}
                    role="group"
                  >
                    <div
                      className="css-smz777"
                      role="group"
                    >
                      <FormLabel
                        htmlFor="00000000-0000-0000-0000-000000000000"
                      >
                        <Box
                          as="label"
                          display="inline-block"
                          fontSize="md"
                          fontWeight="medium"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                          opacity="1"
                          pb="4px"
                          pr="12px"
                          textAlign="left"
                          verticalAlign="middle"
                        >
                          <label
                            className="css-176s5fq"
                            htmlFor="00000000-0000-0000-0000-000000000000"
                          >
                            Compare to
                          </label>
                        </Box>
                      </FormLabel>
                      <ForwardRef
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        inputId="00000000-0000-0000-0000-000000000000"
                        isClearable={true}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "_id": "abcd",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 1",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": -1,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 0,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                            Object {
                              "_id": "efgh",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 2",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": 50,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 1,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                          ]
                        }
                      >
                        <ReactSelect
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          innerRef={null}
                          inputId="00000000-0000-0000-0000-000000000000"
                          isClearable={true}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "_id": "abcd",
                                "accessGroup": "accessGroupName",
                                "bounds": Object {},
                                "bundleId": "1",
                                "complete": true,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "cutoffMinutes": 60,
                                "cutoffsMinutes": Array [
                                  60,
                                ],
                                "deleted": false,
                                "destinationPointSetIds": Array [
                                  "Jobs_total",
                                ],
                                "grid": "Jobs_total",
                                "height": 300,
                                "name": "ANALYSIS 1",
                                "nonce": "12345",
                                "north": 20024,
                                "projectId": "1",
                                "request": Object {
                                  "accessModes": "WALK",
                                  "bikeSafe": 1,
                                  "bikeSlope": 1,
                                  "bikeSpeed": 4.166666666666667,
                                  "bikeTime": 1,
                                  "bounds": Object {
                                    "east": -76,
                                    "north": 39,
                                    "south": 38,
                                    "west": -77,
                                  },
                                  "bundleId": "1",
                                  "date": "2016-01-16",
                                  "defaultExpanded": true,
                                  "directModes": "WALK",
                                  "egressModes": "WALK",
                                  "fromLat": 12,
                                  "fromLon": 34,
                                  "fromTime": 25200,
                                  "maxBikeTime": 20,
                                  "maxRides": 4,
                                  "maxTripDurationMinutes": 60,
                                  "maxWalkTime": 20,
                                  "monteCarloDraws": 200,
                                  "name": "Profile Request Test",
                                  "projectId": "1",
                                  "reachabilityThreshold": 0,
                                  "regionId": "1",
                                  "toTime": 32400,
                                  "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                  "travelTimePercentile": 50,
                                  "variantIndex": 0,
                                  "walkSpeed": 1.3888888888888888,
                                  "workerVersion": "v4.0.0",
                                },
                                "status": "DONE",
                                "travelTimePercentile": -1,
                                "travelTimePercentiles": Array [
                                  50,
                                ],
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variant": 0,
                                "west": 20015,
                                "width": 300,
                                "workerVersion": "v3.2.0",
                                "zoom": 9,
                              },
                              Object {
                                "_id": "efgh",
                                "accessGroup": "accessGroupName",
                                "bounds": Object {},
                                "bundleId": "1",
                                "complete": true,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "cutoffMinutes": 60,
                                "cutoffsMinutes": Array [
                                  60,
                                ],
                                "deleted": false,
                                "destinationPointSetIds": Array [
                                  "Jobs_total",
                                ],
                                "grid": "Jobs_total",
                                "height": 300,
                                "name": "ANALYSIS 2",
                                "nonce": "12345",
                                "north": 20024,
                                "projectId": "1",
                                "request": Object {
                                  "accessModes": "WALK",
                                  "bikeSafe": 1,
                                  "bikeSlope": 1,
                                  "bikeSpeed": 4.166666666666667,
                                  "bikeTime": 1,
                                  "bounds": Object {
                                    "east": -76,
                                    "north": 39,
                                    "south": 38,
                                    "west": -77,
                                  },
                                  "bundleId": "1",
                                  "date": "2016-01-16",
                                  "defaultExpanded": true,
                                  "directModes": "WALK",
                                  "egressModes": "WALK",
                                  "fromLat": 12,
                                  "fromLon": 34,
                                  "fromTime": 25200,
                                  "maxBikeTime": 20,
                                  "maxRides": 4,
                                  "maxTripDurationMinutes": 60,
                                  "maxWalkTime": 20,
                                  "monteCarloDraws": 200,
                                  "name": "Profile Request Test",
                                  "projectId": "1",
                                  "reachabilityThreshold": 0,
                                  "regionId": "1",
                                  "toTime": 32400,
                                  "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                  "travelTimePercentile": 50,
                                  "variantIndex": 0,
                                  "walkSpeed": 1.3888888888888888,
                                  "workerVersion": "v4.0.0",
                                },
                                "status": "DONE",
                                "travelTimePercentile": 50,
                                "travelTimePercentiles": Array [
                                  50,
                                ],
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variant": 1,
                                "west": 20015,
                                "width": 300,
                                "workerVersion": "v3.2.0",
                                "zoom": 9,
                              },
                            ]
                          }
                          styles={
                            Object {
                              "control": [Function],
                              "menu": [Function],
                              "option": [Function],
                            }
                          }
                        >
                          <div
                            className="ReactSelectMock"
                          />
                        </ReactSelect>
                      </ForwardRef>
                    </div>
                  </Box>
                </FormControl>
                <ReactLeafletControl
                  key=".2"
                  mb={4}
                  position="bottomleft"
                >
                  <ForwardRef
                    backgroundColor="white"
                    boxShadow="lg"
                    rounded="md"
                    spacing={3}
                    width="296px"
                  >
                    <Flex
                      backgroundColor="white"
                      boxShadow="lg"
                      direction="column"
                      rounded="md"
                      width="296px"
                    >
                      <Box
                        backgroundColor="white"
                        boxShadow="lg"
                        display="flex"
                        flexDirection="column"
                        rounded="md"
                        width="296px"
                      >
                        <div
                          className="css-a9djx9"
                        >
                          <Heading
                            key=".0"
                            mb={3}
                            pt={4}
                            px={4}
                            size="sm"
                          >
                            <Box
                              as="h2"
                              fontFamily="heading"
                              fontSize="md"
                              fontWeight="bold"
                              lineHeight="shorter"
                              mb={3}
                              pt={4}
                              px={4}
                            >
                              <h2
                                className="css-thnzpe"
                              >
                                <Icon
                                  icon={
                                    Object {
                                      "icon": Array [],
                                      "iconName": "th",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [],
                                        "iconName": "th",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-th fa-w-NaN fa-fw "
                                      data-icon="th"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 undefined undefined"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </Icon>
                                 Access to
                              </h2>
                            </Box>
                          </Heading>
                          <Box
                            key=".1"
                            mb={3}
                            px={4}
                          >
                            <div
                              className="css-1w68sn0"
                            >
                              <Heading
                                size="xs"
                              >
                                <Box
                                  as="h2"
                                  fontFamily="heading"
                                  fontSize="sm"
                                  fontWeight="bold"
                                  lineHeight="shorter"
                                >
                                  <h2
                                    className="css-glel1g"
                                  >
                                    ANALYSIS 1
                                  </h2>
                                </Box>
                              </Heading>
                              <Text>
                                <Box
                                  as="p"
                                  fontFamily="body"
                                >
                                  <p
                                    className="css-fzcsno"
                                  >
                                    undefined within 60 minutes, 50th percentile
                                  </p>
                                </Box>
                              </Text>
                            </div>
                          </Box>
                          <Legend
                            breaks={
                              Array [
                                0,
                                436,
                                857,
                                1257,
                                1649,
                                2000,
                              ]
                            }
                            colors={
                              Array [
                                Rgb {
                                  "b": 255,
                                  "g": 255,
                                  "opacity": 0,
                                  "r": 255,
                                },
                                Rgb {
                                  "b": 239,
                                  "g": 219,
                                  "opacity": 0.42,
                                  "r": 198,
                                },
                                Rgb {
                                  "b": 225,
                                  "g": 202,
                                  "opacity": 0.42,
                                  "r": 158,
                                },
                                Rgb {
                                  "b": 214,
                                  "g": 174,
                                  "opacity": 0.42,
                                  "r": 107,
                                },
                                Rgb {
                                  "b": 189,
                                  "g": 130,
                                  "opacity": 0.42,
                                  "r": 49,
                                },
                                Rgb {
                                  "b": 156,
                                  "g": 81,
                                  "opacity": 0.42,
                                  "r": 8,
                                },
                              ]
                            }
                            key=".3"
                            mb={null}
                            min={0}
                          >
                            <ForwardRef
                              borderTop="1px solid #E2E8F0"
                              spacing={0}
                            >
                              <Flex
                                borderTop="1px solid #E2E8F0"
                                direction="column"
                              >
                                <Box
                                  borderTop="1px solid #E2E8F0"
                                  display="flex"
                                  flexDirection="column"
                                >
                                  <div
                                    className="css-1qzxoio"
                                  >
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(8, 81, 156, 1)"
                                      color="#fff"
                                      key=".$break-0"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-14yo73u"
                                      >
                                        2,000 to 1,649
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(49, 130, 189, 1)"
                                      color="#fff"
                                      key=".$break-1"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-12ea82d"
                                      >
                                        1,649 to 1,257
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(107, 174, 214, 1)"
                                      color="#000"
                                      key=".$break-2"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-14al05z"
                                      >
                                        1,257 to 857
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(158, 202, 225, 1)"
                                      color="#000"
                                      key=".$break-3"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-18ae6xo"
                                      >
                                        857 to 436
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(198, 219, 239, 1)"
                                      color="#000"
                                      key=".$break-4"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-votpp9"
                                      >
                                        436 to 0
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(255, 255, 255, 1)"
                                      color="#000"
                                      key=".$break-5"
                                      mb={null}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-1vujae9"
                                      >
                                        0 (transparent)
                                      </div>
                                    </PseudoBox>
                                  </div>
                                </Box>
                              </Flex>
                            </ForwardRef>
                          </Legend>
                        </div>
                      </Box>
                    </Flex>
                  </ForwardRef>
                </ReactLeafletControl>
                <Box
                  key=".3"
                  mb={null}
                  p={4}
                >
                  <div
                    className="css-q5fqw0"
                  >
                    <AggregationArea>
                      <ForwardRef
                        spacing={4}
                      >
                        <Flex
                          direction="column"
                        >
                          <Box
                            display="flex"
                            flexDirection="column"
                          >
                            <div
                              className="css-j7qwjs"
                            >
                              <FormControl
                                key=".0"
                                mb={4}
                              >
                                <Box
                                  mb={4}
                                  role="group"
                                >
                                  <div
                                    className="css-acwcvw"
                                    role="group"
                                  >
                                    <FormLabel>
                                      <Box
                                        as="label"
                                        display="inline-block"
                                        fontSize="md"
                                        fontWeight="medium"
                                        opacity="1"
                                        pb="4px"
                                        pr="12px"
                                        textAlign="left"
                                        verticalAlign="middle"
                                      >
                                        <label
                                          className="css-176s5fq"
                                        >
                                          Aggregate results to
                                        </label>
                                      </Box>
                                    </FormLabel>
                                    <ForwardRef
                                      getOptionLabel={[Function]}
                                      getOptionValue={[Function]}
                                      isClearable={true}
                                      isLoading={false}
                                      name="aggregateTo"
                                      onChange={[Function]}
                                      options={Array []}
                                    >
                                      <ReactSelect
                                        getOptionLabel={[Function]}
                                        getOptionValue={[Function]}
                                        innerRef={null}
                                        isClearable={true}
                                        isLoading={false}
                                        name="aggregateTo"
                                        onChange={[Function]}
                                        options={Array []}
                                        styles={
                                          Object {
                                            "control": [Function],
                                            "menu": [Function],
                                            "option": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="ReactSelectMock"
                                        />
                                      </ReactSelect>
                                    </ForwardRef>
                                  </div>
                                </Box>
                              </FormControl>
                              <Button
                                isFullWidth={true}
                                key=".1"
                                leftIcon="chevron-down"
                                mb={null}
                                onClick={[Function]}
                              >
                                <PseudoBox
                                  _active={
                                    Object {
                                      "bg": "gray.300",
                                    }
                                  }
                                  _disabled={
                                    Object {
                                      "boxShadow": "none",
                                      "cursor": "not-allowed",
                                      "opacity": "40%",
                                    }
                                  }
                                  _focus={
                                    Object {
                                      "boxShadow": "outline",
                                    }
                                  }
                                  _hover={
                                    Object {
                                      "bg": "gray.200",
                                    }
                                  }
                                  alignItems="center"
                                  appearance="none"
                                  as="button"
                                  bg="gray.100"
                                  borderRadius="md"
                                  display="inline-flex"
                                  fontSize="md"
                                  fontWeight="semibold"
                                  height={10}
                                  justifyContent="center"
                                  lineHeight="1.2"
                                  mb={null}
                                  minWidth={10}
                                  onClick={[Function]}
                                  outline="none"
                                  position="relative"
                                  px={4}
                                  transition="all 250ms"
                                  type="button"
                                  userSelect="none"
                                  verticalAlign="middle"
                                  whiteSpace="nowrap"
                                  width="full"
                                >
                                  <button
                                    className="css-z70eed"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ButtonIcon
                                      icon="chevron-down"
                                      ml={-1}
                                      mr={2}
                                    >
                                      <Icon
                                        aria-hidden="true"
                                        color="currentColor"
                                        focusable="false"
                                        ml={-1}
                                        mr={2}
                                        name="chevron-down"
                                      >
                                        <Styled(div)
                                          aria-hidden="true"
                                          as="svg"
                                          color="currentColor"
                                          display="inline-block"
                                          focusable="false"
                                          ml={-1}
                                          mr={2}
                                          role="presentation"
                                          size="1em"
                                          verticalAlign="middle"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="css-yxiis9"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </Styled(div)>
                                      </Icon>
                                    </ButtonIcon>
                                    Upload new aggregation area
                                  </button>
                                </PseudoBox>
                              </Button>
                            </div>
                          </Box>
                        </Flex>
                      </ForwardRef>
                    </AggregationArea>
                  </div>
                </Box>
              </div>
            </Box>
          </Flex>
        </ForwardRef>
      </RegionalResults>
    </div>
  </Map>
</WithMap(RegionalResults)>
`;

exports[`RegionalResults with comparison snapshot(mount) 1`] = `
<WithMap(RegionalResults)
  analysis={
    Object {
      "_id": "abcd",
      "accessGroup": "accessGroupName",
      "bounds": Object {},
      "bundleId": "1",
      "complete": true,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "cutoffMinutes": 60,
      "cutoffsMinutes": Array [
        60,
      ],
      "deleted": false,
      "destinationPointSetIds": Array [
        "Jobs_total",
      ],
      "grid": "Jobs_total",
      "height": 300,
      "name": "ANALYSIS 1",
      "nonce": "12345",
      "north": 20024,
      "projectId": "1",
      "request": Object {
        "accessModes": "WALK",
        "bikeSafe": 1,
        "bikeSlope": 1,
        "bikeSpeed": 4.166666666666667,
        "bikeTime": 1,
        "bounds": Object {
          "east": -76,
          "north": 39,
          "south": 38,
          "west": -77,
        },
        "bundleId": "1",
        "date": "2016-01-16",
        "defaultExpanded": true,
        "directModes": "WALK",
        "egressModes": "WALK",
        "fromLat": 12,
        "fromLon": 34,
        "fromTime": 25200,
        "maxBikeTime": 20,
        "maxRides": 4,
        "maxTripDurationMinutes": 60,
        "maxWalkTime": 20,
        "monteCarloDraws": 200,
        "name": "Profile Request Test",
        "projectId": "1",
        "reachabilityThreshold": 0,
        "regionId": "1",
        "toTime": 32400,
        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
        "travelTimePercentile": 50,
        "variantIndex": 0,
        "walkSpeed": 1.3888888888888888,
        "workerVersion": "v4.0.0",
      },
      "status": "DONE",
      "travelTimePercentile": -1,
      "travelTimePercentiles": Array [
        50,
      ],
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variant": 0,
      "west": 20015,
      "width": 300,
      "workerVersion": "v3.2.0",
      "zoom": 9,
    }
  }
  opportunityDatasets={
    Array [
      Object {
        "_id": "Jobs_total",
        "name": "Total jobs",
      },
    ]
  }
  regionId="MOCK_REGION_ID"
>
  <Map>
    <div>
      <RegionalResults
        analysis={
          Object {
            "_id": "abcd",
            "accessGroup": "accessGroupName",
            "bounds": Object {},
            "bundleId": "1",
            "complete": true,
            "createdAt": "2017-11-08T12:30:50.133Z",
            "createdBy": "person@gmail.com",
            "cutoffMinutes": 60,
            "cutoffsMinutes": Array [
              60,
            ],
            "deleted": false,
            "destinationPointSetIds": Array [
              "Jobs_total",
            ],
            "grid": "Jobs_total",
            "height": 300,
            "name": "ANALYSIS 1",
            "nonce": "12345",
            "north": 20024,
            "projectId": "1",
            "request": Object {
              "accessModes": "WALK",
              "bikeSafe": 1,
              "bikeSlope": 1,
              "bikeSpeed": 4.166666666666667,
              "bikeTime": 1,
              "bounds": Object {
                "east": -76,
                "north": 39,
                "south": 38,
                "west": -77,
              },
              "bundleId": "1",
              "date": "2016-01-16",
              "defaultExpanded": true,
              "directModes": "WALK",
              "egressModes": "WALK",
              "fromLat": 12,
              "fromLon": 34,
              "fromTime": 25200,
              "maxBikeTime": 20,
              "maxRides": 4,
              "maxTripDurationMinutes": 60,
              "maxWalkTime": 20,
              "monteCarloDraws": 200,
              "name": "Profile Request Test",
              "projectId": "1",
              "reachabilityThreshold": 0,
              "regionId": "1",
              "toTime": 32400,
              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
              "travelTimePercentile": 50,
              "variantIndex": 0,
              "walkSpeed": 1.3888888888888888,
              "workerVersion": "v4.0.0",
            },
            "status": "DONE",
            "travelTimePercentile": -1,
            "travelTimePercentiles": Array [
              50,
            ],
            "updatedAt": "2017-11-08T12:31:19.602Z",
            "updatedBy": "person@gmail.com",
            "variant": 0,
            "west": 20015,
            "width": 300,
            "workerVersion": "v3.2.0",
            "zoom": 9,
          }
        }
        opportunityDatasets={
          Array [
            Object {
              "_id": "Jobs_total",
              "name": "Total jobs",
            },
          ]
        }
        regionId="MOCK_REGION_ID"
      >
        <ForwardRef
          py={4}
          spacing={4}
        >
          <Flex
            direction="column"
            py={4}
          >
            <Box
              display="flex"
              flexDirection="column"
              py={4}
            >
              <div
                className="css-1crhdyy"
              >
                <FormControl
                  key=".0"
                  mb={4}
                  px={4}
                >
                  <Box
                    mb={4}
                    px={4}
                    role="group"
                  >
                    <div
                      className="css-smz777"
                      role="group"
                    >
                      <FormLabel
                        htmlFor="00000000-0000-0000-0000-000000000000"
                      >
                        <Box
                          as="label"
                          display="inline-block"
                          fontSize="md"
                          fontWeight="medium"
                          htmlFor="00000000-0000-0000-0000-000000000000"
                          opacity="1"
                          pb="4px"
                          pr="12px"
                          textAlign="left"
                          verticalAlign="middle"
                        >
                          <label
                            className="css-176s5fq"
                            htmlFor="00000000-0000-0000-0000-000000000000"
                          >
                            Compare to
                          </label>
                        </Box>
                      </FormLabel>
                      <ForwardRef
                        getOptionLabel={[Function]}
                        getOptionValue={[Function]}
                        inputId="00000000-0000-0000-0000-000000000000"
                        isClearable={true}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "_id": "abcd",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 1",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": -1,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 0,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                            Object {
                              "_id": "efgh",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 2",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": 50,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 1,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            },
                          ]
                        }
                        value={
                          Object {
                            "_id": "efgh",
                            "accessGroup": "accessGroupName",
                            "bounds": Object {},
                            "bundleId": "1",
                            "complete": true,
                            "createdAt": "2017-11-08T12:30:50.133Z",
                            "createdBy": "person@gmail.com",
                            "cutoffMinutes": 60,
                            "cutoffsMinutes": Array [
                              60,
                            ],
                            "deleted": false,
                            "destinationPointSetIds": Array [
                              "Jobs_total",
                            ],
                            "grid": "Jobs_total",
                            "height": 300,
                            "name": "ANALYSIS 2",
                            "nonce": "12345",
                            "north": 20024,
                            "projectId": "1",
                            "request": Object {
                              "accessModes": "WALK",
                              "bikeSafe": 1,
                              "bikeSlope": 1,
                              "bikeSpeed": 4.166666666666667,
                              "bikeTime": 1,
                              "bounds": Object {
                                "east": -76,
                                "north": 39,
                                "south": 38,
                                "west": -77,
                              },
                              "bundleId": "1",
                              "date": "2016-01-16",
                              "defaultExpanded": true,
                              "directModes": "WALK",
                              "egressModes": "WALK",
                              "fromLat": 12,
                              "fromLon": 34,
                              "fromTime": 25200,
                              "maxBikeTime": 20,
                              "maxRides": 4,
                              "maxTripDurationMinutes": 60,
                              "maxWalkTime": 20,
                              "monteCarloDraws": 200,
                              "name": "Profile Request Test",
                              "projectId": "1",
                              "reachabilityThreshold": 0,
                              "regionId": "1",
                              "toTime": 32400,
                              "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                              "travelTimePercentile": 50,
                              "variantIndex": 0,
                              "walkSpeed": 1.3888888888888888,
                              "workerVersion": "v4.0.0",
                            },
                            "status": "DONE",
                            "travelTimePercentile": 50,
                            "travelTimePercentiles": Array [
                              50,
                            ],
                            "updatedAt": "2017-11-08T12:31:19.602Z",
                            "updatedBy": "person@gmail.com",
                            "variant": 1,
                            "west": 20015,
                            "width": 300,
                            "workerVersion": "v3.2.0",
                            "zoom": 9,
                          }
                        }
                      >
                        <ReactSelect
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          innerRef={null}
                          inputId="00000000-0000-0000-0000-000000000000"
                          isClearable={true}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "_id": "abcd",
                                "accessGroup": "accessGroupName",
                                "bounds": Object {},
                                "bundleId": "1",
                                "complete": true,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "cutoffMinutes": 60,
                                "cutoffsMinutes": Array [
                                  60,
                                ],
                                "deleted": false,
                                "destinationPointSetIds": Array [
                                  "Jobs_total",
                                ],
                                "grid": "Jobs_total",
                                "height": 300,
                                "name": "ANALYSIS 1",
                                "nonce": "12345",
                                "north": 20024,
                                "projectId": "1",
                                "request": Object {
                                  "accessModes": "WALK",
                                  "bikeSafe": 1,
                                  "bikeSlope": 1,
                                  "bikeSpeed": 4.166666666666667,
                                  "bikeTime": 1,
                                  "bounds": Object {
                                    "east": -76,
                                    "north": 39,
                                    "south": 38,
                                    "west": -77,
                                  },
                                  "bundleId": "1",
                                  "date": "2016-01-16",
                                  "defaultExpanded": true,
                                  "directModes": "WALK",
                                  "egressModes": "WALK",
                                  "fromLat": 12,
                                  "fromLon": 34,
                                  "fromTime": 25200,
                                  "maxBikeTime": 20,
                                  "maxRides": 4,
                                  "maxTripDurationMinutes": 60,
                                  "maxWalkTime": 20,
                                  "monteCarloDraws": 200,
                                  "name": "Profile Request Test",
                                  "projectId": "1",
                                  "reachabilityThreshold": 0,
                                  "regionId": "1",
                                  "toTime": 32400,
                                  "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                  "travelTimePercentile": 50,
                                  "variantIndex": 0,
                                  "walkSpeed": 1.3888888888888888,
                                  "workerVersion": "v4.0.0",
                                },
                                "status": "DONE",
                                "travelTimePercentile": -1,
                                "travelTimePercentiles": Array [
                                  50,
                                ],
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variant": 0,
                                "west": 20015,
                                "width": 300,
                                "workerVersion": "v3.2.0",
                                "zoom": 9,
                              },
                              Object {
                                "_id": "efgh",
                                "accessGroup": "accessGroupName",
                                "bounds": Object {},
                                "bundleId": "1",
                                "complete": true,
                                "createdAt": "2017-11-08T12:30:50.133Z",
                                "createdBy": "person@gmail.com",
                                "cutoffMinutes": 60,
                                "cutoffsMinutes": Array [
                                  60,
                                ],
                                "deleted": false,
                                "destinationPointSetIds": Array [
                                  "Jobs_total",
                                ],
                                "grid": "Jobs_total",
                                "height": 300,
                                "name": "ANALYSIS 2",
                                "nonce": "12345",
                                "north": 20024,
                                "projectId": "1",
                                "request": Object {
                                  "accessModes": "WALK",
                                  "bikeSafe": 1,
                                  "bikeSlope": 1,
                                  "bikeSpeed": 4.166666666666667,
                                  "bikeTime": 1,
                                  "bounds": Object {
                                    "east": -76,
                                    "north": 39,
                                    "south": 38,
                                    "west": -77,
                                  },
                                  "bundleId": "1",
                                  "date": "2016-01-16",
                                  "defaultExpanded": true,
                                  "directModes": "WALK",
                                  "egressModes": "WALK",
                                  "fromLat": 12,
                                  "fromLon": 34,
                                  "fromTime": 25200,
                                  "maxBikeTime": 20,
                                  "maxRides": 4,
                                  "maxTripDurationMinutes": 60,
                                  "maxWalkTime": 20,
                                  "monteCarloDraws": 200,
                                  "name": "Profile Request Test",
                                  "projectId": "1",
                                  "reachabilityThreshold": 0,
                                  "regionId": "1",
                                  "toTime": 32400,
                                  "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                  "travelTimePercentile": 50,
                                  "variantIndex": 0,
                                  "walkSpeed": 1.3888888888888888,
                                  "workerVersion": "v4.0.0",
                                },
                                "status": "DONE",
                                "travelTimePercentile": 50,
                                "travelTimePercentiles": Array [
                                  50,
                                ],
                                "updatedAt": "2017-11-08T12:31:19.602Z",
                                "updatedBy": "person@gmail.com",
                                "variant": 1,
                                "west": 20015,
                                "width": 300,
                                "workerVersion": "v3.2.0",
                                "zoom": 9,
                              },
                            ]
                          }
                          styles={
                            Object {
                              "control": [Function],
                              "menu": [Function],
                              "option": [Function],
                            }
                          }
                          value={
                            Object {
                              "_id": "efgh",
                              "accessGroup": "accessGroupName",
                              "bounds": Object {},
                              "bundleId": "1",
                              "complete": true,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "cutoffMinutes": 60,
                              "cutoffsMinutes": Array [
                                60,
                              ],
                              "deleted": false,
                              "destinationPointSetIds": Array [
                                "Jobs_total",
                              ],
                              "grid": "Jobs_total",
                              "height": 300,
                              "name": "ANALYSIS 2",
                              "nonce": "12345",
                              "north": 20024,
                              "projectId": "1",
                              "request": Object {
                                "accessModes": "WALK",
                                "bikeSafe": 1,
                                "bikeSlope": 1,
                                "bikeSpeed": 4.166666666666667,
                                "bikeTime": 1,
                                "bounds": Object {
                                  "east": -76,
                                  "north": 39,
                                  "south": 38,
                                  "west": -77,
                                },
                                "bundleId": "1",
                                "date": "2016-01-16",
                                "defaultExpanded": true,
                                "directModes": "WALK",
                                "egressModes": "WALK",
                                "fromLat": 12,
                                "fromLon": 34,
                                "fromTime": 25200,
                                "maxBikeTime": 20,
                                "maxRides": 4,
                                "maxTripDurationMinutes": 60,
                                "maxWalkTime": 20,
                                "monteCarloDraws": 200,
                                "name": "Profile Request Test",
                                "projectId": "1",
                                "reachabilityThreshold": 0,
                                "regionId": "1",
                                "toTime": 32400,
                                "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                                "travelTimePercentile": 50,
                                "variantIndex": 0,
                                "walkSpeed": 1.3888888888888888,
                                "workerVersion": "v4.0.0",
                              },
                              "status": "DONE",
                              "travelTimePercentile": 50,
                              "travelTimePercentiles": Array [
                                50,
                              ],
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variant": 1,
                              "west": 20015,
                              "width": 300,
                              "workerVersion": "v3.2.0",
                              "zoom": 9,
                            }
                          }
                        >
                          <div
                            className="ReactSelectMock"
                          />
                        </ReactSelect>
                      </ForwardRef>
                    </div>
                  </Box>
                </FormControl>
                <ComparisonDisplay
                  analysis={
                    Object {
                      "_id": "abcd",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "1",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "destinationPointSetIds": Array [
                        "Jobs_total",
                      ],
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 1",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "1",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": -1,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 0,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    }
                  }
                  comparisonAnalysis={
                    Object {
                      "_id": "efgh",
                      "accessGroup": "accessGroupName",
                      "bounds": Object {},
                      "bundleId": "1",
                      "complete": true,
                      "createdAt": "2017-11-08T12:30:50.133Z",
                      "createdBy": "person@gmail.com",
                      "cutoffMinutes": 60,
                      "cutoffsMinutes": Array [
                        60,
                      ],
                      "deleted": false,
                      "destinationPointSetIds": Array [
                        "Jobs_total",
                      ],
                      "grid": "Jobs_total",
                      "height": 300,
                      "name": "ANALYSIS 2",
                      "nonce": "12345",
                      "north": 20024,
                      "projectId": "1",
                      "request": Object {
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "workerVersion": "v4.0.0",
                      },
                      "status": "DONE",
                      "travelTimePercentile": 50,
                      "travelTimePercentiles": Array [
                        50,
                      ],
                      "updatedAt": "2017-11-08T12:31:19.602Z",
                      "updatedBy": "person@gmail.com",
                      "variant": 1,
                      "west": 20015,
                      "width": 300,
                      "workerVersion": "v3.2.0",
                      "zoom": 9,
                    }
                  }
                  key=".1"
                  mb={4}
                >
                  <ForwardRef
                    pb={4}
                    px={4}
                    spacing={4}
                  >
                    <Flex
                      direction="column"
                      pb={4}
                      px={4}
                    >
                      <Box
                        display="flex"
                        flexDirection="column"
                        pb={4}
                        px={4}
                      >
                        <div
                          className="css-1388wv4"
                        >
                          <Select
                            id="00000000-0000-0000-0000-000000000000"
                            isInvalid={false}
                            isValid={true}
                            key=".1"
                            mb={4}
                            onChange={[Function]}
                          >
                            <Box
                              mb={4}
                              position="relative"
                              width="100%"
                            >
                              <div
                                className="css-1s2yu6d"
                              >
                                <ForwardRef(SelectInput)
                                  color="inherit"
                                  id="00000000-0000-0000-0000-000000000000"
                                  isInvalid={false}
                                  isValid={true}
                                  onChange={[Function]}
                                >
                                  <Input
                                    appearance="none"
                                    as="select"
                                    color="inherit"
                                    errorBorderColor="red.500"
                                    focusBorderColor="blue.500"
                                    id="00000000-0000-0000-0000-000000000000"
                                    isFullWidth={true}
                                    isInvalid={false}
                                    isValid={true}
                                    lineHeight="normal"
                                    onChange={[Function]}
                                    pb="px"
                                    pr="2rem"
                                    size="md"
                                    variant="outline"
                                  >
                                    <PseudoBox
                                      _disabled={
                                        Object {
                                          "cursor": "not-allowed",
                                          "opacity": "0.4",
                                        }
                                      }
                                      _focus={
                                        Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": 1,
                                        }
                                      }
                                      _hover={
                                        Object {
                                          "borderColor": "gray.300",
                                        }
                                      }
                                      _invalid={
                                        Object {
                                          "borderColor": "#e53e3e",
                                          "boxShadow": "0 0 0 1px #e53e3e",
                                        }
                                      }
                                      _readOnly={
                                        Object {
                                          "bg": "transparent",
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        }
                                      }
                                      alignItems="center"
                                      appearance="none"
                                      aria-invalid={false}
                                      as="select"
                                      bg="white"
                                      border="1px"
                                      borderColor="inherit"
                                      color="inherit"
                                      display="flex"
                                      fontSize="md"
                                      height={10}
                                      id="00000000-0000-0000-0000-000000000000"
                                      isValid={true}
                                      lineHeight="normal"
                                      onChange={[Function]}
                                      outline="none"
                                      pb="px"
                                      position="relative"
                                      pr="2rem"
                                      px={4}
                                      rounded="md"
                                      transition="all 0.2s"
                                      width="100%"
                                    >
                                      <select
                                        aria-invalid={false}
                                        className="css-16ut77p"
                                        id="00000000-0000-0000-0000-000000000000"
                                        onChange={[Function]}
                                      >
                                        <option
                                          key="Jobs_total"
                                          value="Jobs_total"
                                        >
                                          undefined: undefined
                                        </option>
                                      </select>
                                    </PseudoBox>
                                  </Input>
                                </ForwardRef(SelectInput)>
                                <ForwardRef(SelectIconWrapper)
                                  color="inherit"
                                  opacity={null}
                                >
                                  <Box
                                    alignItems="center"
                                    color="inherit"
                                    display="inline-flex"
                                    height="100%"
                                    justifyContent="center"
                                    opacity={null}
                                    pointerEvents="none"
                                    position="absolute"
                                    right="0.5rem"
                                    top="50%"
                                    transform="translateY(-50%)"
                                    width="1.5rem"
                                    zIndex={2}
                                  >
                                    <div
                                      className="css-1lepn2w"
                                    >
                                      <EnhancedIcon
                                        aria-hidden="true"
                                        focusable="false"
                                        icon="chevron-down"
                                        size={5}
                                      >
                                        <Icon
                                          aria-hidden="true"
                                          color="currentColor"
                                          focusable="false"
                                          name="chevron-down"
                                          size={5}
                                        >
                                          <Styled(div)
                                            aria-hidden="true"
                                            as="svg"
                                            color="currentColor"
                                            display="inline-block"
                                            focusable="false"
                                            role="presentation"
                                            size={5}
                                            verticalAlign="middle"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="css-12c4avn"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                fill="currentColor"
                                              />
                                            </svg>
                                          </Styled(div)>
                                        </Icon>
                                      </EnhancedIcon>
                                    </div>
                                  </Box>
                                </ForwardRef(SelectIconWrapper)>
                              </div>
                            </Box>
                          </Select>
                          <ForwardRef
                            isInline={true}
                            key=".2"
                            mb={null}
                          >
                            <Flex
                              direction="row"
                              mb={null}
                            >
                              <Box
                                display="flex"
                                flexDirection="row"
                                mb={null}
                              >
                                <div
                                  className="css-1xhj18k"
                                >
                                  <Select
                                    id="00000000-0000-0000-0000-000000000000"
                                    isInvalid={false}
                                    isValid={true}
                                    key=".0"
                                    mr={2}
                                    onChange={[Function]}
                                    value={60}
                                  >
                                    <Box
                                      mr={2}
                                      position="relative"
                                      width="100%"
                                    >
                                      <div
                                        className="css-1oujc4q"
                                      >
                                        <ForwardRef(SelectInput)
                                          color="inherit"
                                          id="00000000-0000-0000-0000-000000000000"
                                          isInvalid={false}
                                          isValid={true}
                                          onChange={[Function]}
                                          value={60}
                                        >
                                          <Input
                                            appearance="none"
                                            as="select"
                                            color="inherit"
                                            errorBorderColor="red.500"
                                            focusBorderColor="blue.500"
                                            id="00000000-0000-0000-0000-000000000000"
                                            isFullWidth={true}
                                            isInvalid={false}
                                            isValid={true}
                                            lineHeight="normal"
                                            onChange={[Function]}
                                            pb="px"
                                            pr="2rem"
                                            size="md"
                                            value={60}
                                            variant="outline"
                                          >
                                            <PseudoBox
                                              _disabled={
                                                Object {
                                                  "cursor": "not-allowed",
                                                  "opacity": "0.4",
                                                }
                                              }
                                              _focus={
                                                Object {
                                                  "borderColor": "#3182ce",
                                                  "boxShadow": "0 0 0 1px #3182ce",
                                                  "zIndex": 1,
                                                }
                                              }
                                              _hover={
                                                Object {
                                                  "borderColor": "gray.300",
                                                }
                                              }
                                              _invalid={
                                                Object {
                                                  "borderColor": "#e53e3e",
                                                  "boxShadow": "0 0 0 1px #e53e3e",
                                                }
                                              }
                                              _readOnly={
                                                Object {
                                                  "bg": "transparent",
                                                  "boxShadow": "none !important",
                                                  "userSelect": "all",
                                                }
                                              }
                                              alignItems="center"
                                              appearance="none"
                                              aria-invalid={false}
                                              as="select"
                                              bg="white"
                                              border="1px"
                                              borderColor="inherit"
                                              color="inherit"
                                              display="flex"
                                              fontSize="md"
                                              height={10}
                                              id="00000000-0000-0000-0000-000000000000"
                                              isValid={true}
                                              lineHeight="normal"
                                              onChange={[Function]}
                                              outline="none"
                                              pb="px"
                                              position="relative"
                                              pr="2rem"
                                              px={4}
                                              rounded="md"
                                              transition="all 0.2s"
                                              value={60}
                                              width="100%"
                                            >
                                              <select
                                                aria-invalid={false}
                                                className="css-16ut77p"
                                                id="00000000-0000-0000-0000-000000000000"
                                                onChange={[Function]}
                                                value={60}
                                              >
                                                <option
                                                  key="60"
                                                  value={60}
                                                >
                                                  60
                                                   minutes
                                                </option>
                                              </select>
                                            </PseudoBox>
                                          </Input>
                                        </ForwardRef(SelectInput)>
                                        <ForwardRef(SelectIconWrapper)
                                          color="inherit"
                                          opacity={null}
                                        >
                                          <Box
                                            alignItems="center"
                                            color="inherit"
                                            display="inline-flex"
                                            height="100%"
                                            justifyContent="center"
                                            opacity={null}
                                            pointerEvents="none"
                                            position="absolute"
                                            right="0.5rem"
                                            top="50%"
                                            transform="translateY(-50%)"
                                            width="1.5rem"
                                            zIndex={2}
                                          >
                                            <div
                                              className="css-1lepn2w"
                                            >
                                              <EnhancedIcon
                                                aria-hidden="true"
                                                focusable="false"
                                                icon="chevron-down"
                                                size={5}
                                              >
                                                <Icon
                                                  aria-hidden="true"
                                                  color="currentColor"
                                                  focusable="false"
                                                  name="chevron-down"
                                                  size={5}
                                                >
                                                  <Styled(div)
                                                    aria-hidden="true"
                                                    as="svg"
                                                    color="currentColor"
                                                    display="inline-block"
                                                    focusable="false"
                                                    role="presentation"
                                                    size={5}
                                                    verticalAlign="middle"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-12c4avn"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                        fill="currentColor"
                                                      />
                                                    </svg>
                                                  </Styled(div)>
                                                </Icon>
                                              </EnhancedIcon>
                                            </div>
                                          </Box>
                                        </ForwardRef(SelectIconWrapper)>
                                      </div>
                                    </Box>
                                  </Select>
                                  <Select
                                    id="00000000-0000-0000-0000-000000000000"
                                    isInvalid={false}
                                    isValid={true}
                                    key=".1"
                                    mr={null}
                                    onChange={[Function]}
                                    value={50}
                                  >
                                    <Box
                                      mr={null}
                                      position="relative"
                                      width="100%"
                                    >
                                      <div
                                        className="css-1jke4yk"
                                      >
                                        <ForwardRef(SelectInput)
                                          color="inherit"
                                          id="00000000-0000-0000-0000-000000000000"
                                          isInvalid={false}
                                          isValid={true}
                                          onChange={[Function]}
                                          value={50}
                                        >
                                          <Input
                                            appearance="none"
                                            as="select"
                                            color="inherit"
                                            errorBorderColor="red.500"
                                            focusBorderColor="blue.500"
                                            id="00000000-0000-0000-0000-000000000000"
                                            isFullWidth={true}
                                            isInvalid={false}
                                            isValid={true}
                                            lineHeight="normal"
                                            onChange={[Function]}
                                            pb="px"
                                            pr="2rem"
                                            size="md"
                                            value={50}
                                            variant="outline"
                                          >
                                            <PseudoBox
                                              _disabled={
                                                Object {
                                                  "cursor": "not-allowed",
                                                  "opacity": "0.4",
                                                }
                                              }
                                              _focus={
                                                Object {
                                                  "borderColor": "#3182ce",
                                                  "boxShadow": "0 0 0 1px #3182ce",
                                                  "zIndex": 1,
                                                }
                                              }
                                              _hover={
                                                Object {
                                                  "borderColor": "gray.300",
                                                }
                                              }
                                              _invalid={
                                                Object {
                                                  "borderColor": "#e53e3e",
                                                  "boxShadow": "0 0 0 1px #e53e3e",
                                                }
                                              }
                                              _readOnly={
                                                Object {
                                                  "bg": "transparent",
                                                  "boxShadow": "none !important",
                                                  "userSelect": "all",
                                                }
                                              }
                                              alignItems="center"
                                              appearance="none"
                                              aria-invalid={false}
                                              as="select"
                                              bg="white"
                                              border="1px"
                                              borderColor="inherit"
                                              color="inherit"
                                              display="flex"
                                              fontSize="md"
                                              height={10}
                                              id="00000000-0000-0000-0000-000000000000"
                                              isValid={true}
                                              lineHeight="normal"
                                              onChange={[Function]}
                                              outline="none"
                                              pb="px"
                                              position="relative"
                                              pr="2rem"
                                              px={4}
                                              rounded="md"
                                              transition="all 0.2s"
                                              value={50}
                                              width="100%"
                                            >
                                              <select
                                                aria-invalid={false}
                                                className="css-16ut77p"
                                                id="00000000-0000-0000-0000-000000000000"
                                                onChange={[Function]}
                                                value={50}
                                              >
                                                <option
                                                  key="50"
                                                  value={50}
                                                >
                                                  50
                                                  th percentile
                                                </option>
                                              </select>
                                            </PseudoBox>
                                          </Input>
                                        </ForwardRef(SelectInput)>
                                        <ForwardRef(SelectIconWrapper)
                                          color="inherit"
                                          opacity={null}
                                        >
                                          <Box
                                            alignItems="center"
                                            color="inherit"
                                            display="inline-flex"
                                            height="100%"
                                            justifyContent="center"
                                            opacity={null}
                                            pointerEvents="none"
                                            position="absolute"
                                            right="0.5rem"
                                            top="50%"
                                            transform="translateY(-50%)"
                                            width="1.5rem"
                                            zIndex={2}
                                          >
                                            <div
                                              className="css-1lepn2w"
                                            >
                                              <EnhancedIcon
                                                aria-hidden="true"
                                                focusable="false"
                                                icon="chevron-down"
                                                size={5}
                                              >
                                                <Icon
                                                  aria-hidden="true"
                                                  color="currentColor"
                                                  focusable="false"
                                                  name="chevron-down"
                                                  size={5}
                                                >
                                                  <Styled(div)
                                                    aria-hidden="true"
                                                    as="svg"
                                                    color="currentColor"
                                                    display="inline-block"
                                                    focusable="false"
                                                    role="presentation"
                                                    size={5}
                                                    verticalAlign="middle"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="css-12c4avn"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                                        fill="currentColor"
                                                      />
                                                    </svg>
                                                  </Styled(div)>
                                                </Icon>
                                              </EnhancedIcon>
                                            </div>
                                          </Box>
                                        </ForwardRef(SelectIconWrapper)>
                                      </div>
                                    </Box>
                                  </Select>
                                </div>
                              </Box>
                            </Flex>
                          </ForwardRef>
                        </div>
                      </Box>
                    </Flex>
                  </ForwardRef>
                  <ProfileRequestDisplay
                    bundleId="1"
                    color="red"
                    profileRequest={
                      Object {
                        "_id": "efgh",
                        "accessGroup": "accessGroupName",
                        "accessModes": "WALK",
                        "bikeSafe": 1,
                        "bikeSlope": 1,
                        "bikeSpeed": 4.166666666666667,
                        "bikeTime": 1,
                        "bounds": Object {
                          "east": -76,
                          "north": 39,
                          "south": 38,
                          "west": -77,
                        },
                        "bundleId": "1",
                        "complete": true,
                        "createdAt": "2017-11-08T12:30:50.133Z",
                        "createdBy": "person@gmail.com",
                        "cutoffMinutes": 60,
                        "cutoffsMinutes": Array [
                          60,
                        ],
                        "date": "2016-01-16",
                        "defaultExpanded": true,
                        "deleted": false,
                        "destinationPointSetIds": Array [
                          "Jobs_total",
                        ],
                        "directModes": "WALK",
                        "egressModes": "WALK",
                        "fromLat": 12,
                        "fromLon": 34,
                        "fromTime": 25200,
                        "grid": "Jobs_total",
                        "height": 300,
                        "maxBikeTime": 20,
                        "maxRides": 4,
                        "maxTripDurationMinutes": 60,
                        "maxWalkTime": 20,
                        "monteCarloDraws": 200,
                        "name": "Profile Request Test",
                        "nonce": "12345",
                        "north": 20024,
                        "projectId": "1",
                        "reachabilityThreshold": 0,
                        "regionId": "1",
                        "status": "DONE",
                        "toTime": 32400,
                        "transitModes": "BUS,TRAM,RAIL,SUBWAY",
                        "travelTimePercentile": 50,
                        "travelTimePercentiles": Array [
                          50,
                        ],
                        "updatedAt": "2017-11-08T12:31:19.602Z",
                        "updatedBy": "person@gmail.com",
                        "variant": 1,
                        "variantIndex": 0,
                        "walkSpeed": 1.3888888888888888,
                        "west": 20015,
                        "width": 300,
                        "workerVersion": "v4.0.0",
                        "zoom": 9,
                      }
                    }
                    projectId="1"
                  >
                    <ForwardRef>
                      <Flex
                        direction="column"
                      >
                        <Box
                          display="flex"
                          flexDirection="column"
                        >
                          <div
                            className="css-j7qwjs"
                          >
                            <Box
                              as="table"
                              key=".0"
                              mb={2}
                              style={
                                Object {
                                  "tableLayout": "fixed",
                                }
                              }
                              width="100%"
                            >
                              <table
                                className="css-e7qgrl"
                                style={
                                  Object {
                                    "tableLayout": "fixed",
                                  }
                                }
                              >
                                <tbody>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Bundle"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Bundle"
                                        >
                                          Bundle
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          <ALink
                                            bundleId="1"
                                            regionId="1"
                                            to="bundleEdit"
                                          >
                                            <InternalLink
                                              bundleId="1"
                                              regionId="1"
                                              to="bundleEdit"
                                            >
                                              <Link
                                                as="/regions/1/bundles/1"
                                                href={
                                                  Object {
                                                    "pathname": "/regions/[regionId]/bundles/[bundleId]",
                                                    "query": Object {},
                                                  }
                                                }
                                                passHref={true}
                                              >
                                                <Link
                                                  _hover={
                                                    Object {
                                                      "color": "blue.700",
                                                    }
                                                  }
                                                  className=""
                                                  color="blue.500"
                                                  href="/regions/1/bundles/1"
                                                  onClick={[Function]}
                                                  onMouseEnter={[Function]}
                                                >
                                                  <PseudoBox
                                                    _disabled={
                                                      Object {
                                                        "cursor": "not-allowed",
                                                        "opacity": "0.4",
                                                        "textDecoration": "none",
                                                      }
                                                    }
                                                    _focus={
                                                      Object {
                                                        "boxShadow": "outline",
                                                      }
                                                    }
                                                    _hover={
                                                      Object {
                                                        "color": "blue.700",
                                                      }
                                                    }
                                                    as="a"
                                                    className=""
                                                    color="blue.500"
                                                    cursor="pointer"
                                                    href="/regions/1/bundles/1"
                                                    onClick={[Function]}
                                                    onMouseEnter={[Function]}
                                                    outline="none"
                                                    textDecoration="none"
                                                    transition="all 0.15s ease-out"
                                                  >
                                                    <a
                                                      className=" css-17d37xz"
                                                      href="/regions/1/bundles/1"
                                                      onClick={[Function]}
                                                      onMouseEnter={[Function]}
                                                    >
                                                      Mock Bundle
                                                    </a>
                                                  </PseudoBox>
                                                </Link>
                                              </Link>
                                            </InternalLink>
                                          </ALink>
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Project"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Project"
                                        >
                                          Project
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          <Tip
                                            label="Notice: project may have changed since the analysis was run."
                                          >
                                            <Tooltip
                                              aria-label="Tooltip: Notice: project may have changed since the analysis was run."
                                              fontSize="md"
                                              hasArrow={true}
                                              label="Notice: project may have changed since the analysis was run."
                                              zIndex={1500}
                                            >
                                              <div
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                              >
                                                <ALink
                                                  projectId="1"
                                                  regionId="1"
                                                  to="project"
                                                >
                                                  <InternalLink
                                                    projectId="1"
                                                    regionId="1"
                                                    to="project"
                                                  >
                                                    <Link
                                                      as="/regions/1/projects/1"
                                                      href={
                                                        Object {
                                                          "pathname": "/regions/[regionId]/projects/[projectId]",
                                                          "query": Object {},
                                                        }
                                                      }
                                                      passHref={true}
                                                    >
                                                      <Link
                                                        _hover={
                                                          Object {
                                                            "color": "blue.700",
                                                          }
                                                        }
                                                        className=""
                                                        color="blue.500"
                                                        href="/regions/1/projects/1"
                                                        onClick={[Function]}
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <PseudoBox
                                                          _disabled={
                                                            Object {
                                                              "cursor": "not-allowed",
                                                              "opacity": "0.4",
                                                              "textDecoration": "none",
                                                            }
                                                          }
                                                          _focus={
                                                            Object {
                                                              "boxShadow": "outline",
                                                            }
                                                          }
                                                          _hover={
                                                            Object {
                                                              "color": "blue.700",
                                                            }
                                                          }
                                                          as="a"
                                                          className=""
                                                          color="blue.500"
                                                          cursor="pointer"
                                                          href="/regions/1/projects/1"
                                                          onClick={[Function]}
                                                          onMouseEnter={[Function]}
                                                          outline="none"
                                                          textDecoration="none"
                                                          transition="all 0.15s ease-out"
                                                        >
                                                          <a
                                                            className=" css-17d37xz"
                                                            href="/regions/1/projects/1"
                                                            onClick={[Function]}
                                                            onMouseEnter={[Function]}
                                                          >
                                                            Mock Project
                                                          </a>
                                                        </PseudoBox>
                                                      </Link>
                                                    </Link>
                                                  </InternalLink>
                                                </ALink>
                                              </div>
                                              <ForwardRef
                                                anchorEl={
                                                  <div>
                                                    <a
                                                      class=" css-17d37xz"
                                                      href="/regions/1/projects/1"
                                                    >
                                                      Mock Project
                                                    </a>
                                                  </div>
                                                }
                                                arrowSize="10px"
                                                bg="gray.700"
                                                borderRadius="sm"
                                                color="whiteAlpha.900"
                                                fontSize="md"
                                                fontWeight="medium"
                                                hasArrow={true}
                                                isOpen={false}
                                                maxW="320px"
                                                modifiers={
                                                  Object {
                                                    "offset": Object {
                                                      "enabled": true,
                                                      "offset": "0, 8",
                                                    },
                                                  }
                                                }
                                                placement="auto"
                                                pointerEvents="none"
                                                px="8px"
                                                py="2px"
                                                shadow="md"
                                                timeout={200}
                                                usePortal={true}
                                                zIndex={1500}
                                              />
                                            </Tooltip>
                                          </Tip>
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Scenario"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Scenario"
                                        >
                                          Scenario
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          Unknown
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Service Date"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Service Date"
                                        >
                                          Service Date
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          2016-01-16
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Service Time"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Service Time"
                                        >
                                          Service Time
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          07:00
                                          -
                                          09:00
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <TDTitle>
                                      <Box
                                        as="td"
                                        fontWeight={600}
                                        overflow="hidden"
                                        px={4}
                                        py={2}
                                        style={
                                          Object {
                                            "textOverflow": "ellipsis",
                                          }
                                        }
                                        textAlign="right"
                                        title="Modes"
                                        width="35%"
                                      >
                                        <td
                                          className="css-1lwb3yd"
                                          style={
                                            Object {
                                              "textOverflow": "ellipsis",
                                            }
                                          }
                                          title="Modes"
                                        >
                                          Modes
                                        </td>
                                      </Box>
                                    </TDTitle>
                                    <TDValue>
                                      <Box
                                        as="td"
                                        width="65%"
                                      >
                                        <td
                                          className="css-ft9ciy"
                                        >
                                          <ModeSummary
                                            accessModes="WALK"
                                            color="red"
                                            egressModes="WALK"
                                            transitModes="BUS,TRAM,RAIL,SUBWAY"
                                          >
                                            <ForwardRef
                                              align="center"
                                              isInline={true}
                                              spacing={1}
                                            >
                                              <Flex
                                                align="center"
                                                direction="row"
                                              >
                                                <Box
                                                  alignItems="center"
                                                  display="flex"
                                                  flexDirection="row"
                                                >
                                                  <div
                                                    className="css-u4p24i"
                                                  >
                                                    <ModeIconBox
                                                      key=".0:$WALK"
                                                      mode="WALK"
                                                      mr={1}
                                                    >
                                                      <Box
                                                        mr={1}
                                                        title="WALK"
                                                      >
                                                        <div
                                                          className="css-1xe59u8"
                                                          title="WALK"
                                                        >
                                                          <ModeIcon
                                                            mode="WALK"
                                                          >
                                                            <Icon
                                                              icon={
                                                                Object {
                                                                  "icon": Array [],
                                                                  "iconName": "walking",
                                                                  "prefix": "fas",
                                                                }
                                                              }
                                                            >
                                                              <FontAwesomeIcon
                                                                border={false}
                                                                className=""
                                                                fixedWidth={true}
                                                                flip={null}
                                                                icon={
                                                                  Object {
                                                                    "icon": Array [],
                                                                    "iconName": "walking",
                                                                    "prefix": "fas",
                                                                  }
                                                                }
                                                                inverse={false}
                                                                listItem={false}
                                                                mask={null}
                                                                pull={null}
                                                                pulse={false}
                                                                rotation={null}
                                                                size={null}
                                                                spin={false}
                                                                swapOpacity={false}
                                                                symbol={false}
                                                                title=""
                                                                transform={null}
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  className="svg-inline--fa fa-walking fa-w-NaN fa-fw "
                                                                  data-icon="walking"
                                                                  data-prefix="fas"
                                                                  focusable="false"
                                                                  role="img"
                                                                  style={Object {}}
                                                                  viewBox="0 0 undefined undefined"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    fill="currentColor"
                                                                    style={Object {}}
                                                                  />
                                                                </svg>
                                                              </FontAwesomeIcon>
                                                            </Icon>
                                                          </ModeIcon>
                                                        </div>
                                                      </Box>
                                                    </ModeIconBox>
                                                    <Tip
                                                      key=".1"
                                                      label="BUS, TRAM, RAIL, SUBWAY"
                                                      mr={null}
                                                    >
                                                      <Tooltip
                                                        aria-label="Tooltip: BUS, TRAM, RAIL, SUBWAY"
                                                        fontSize="md"
                                                        hasArrow={true}
                                                        label="BUS, TRAM, RAIL, SUBWAY"
                                                        mr={null}
                                                        zIndex={1500}
                                                      >
                                                        <ForwardRef
                                                          align="center"
                                                          isInline={true}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          spacing={1}
                                                        >
                                                          <Flex
                                                            align="center"
                                                            direction="row"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onMouseLeave={[Function]}
                                                          >
                                                            <Box
                                                              alignItems="center"
                                                              display="flex"
                                                              flexDirection="row"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                            >
                                                              <div
                                                                className="css-u4p24i"
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                              >
                                                                <Box
                                                                  color="red.500"
                                                                  fontSize="xs"
                                                                  key=".0"
                                                                  mr={1}
                                                                >
                                                                  <div
                                                                    className="css-1el2ag8"
                                                                  >
                                                                    <Icon
                                                                      icon={
                                                                        Object {
                                                                          "icon": Array [],
                                                                          "iconName": "chevron-right",
                                                                          "prefix": "fas",
                                                                        }
                                                                      }
                                                                    >
                                                                      <FontAwesomeIcon
                                                                        border={false}
                                                                        className=""
                                                                        fixedWidth={true}
                                                                        flip={null}
                                                                        icon={
                                                                          Object {
                                                                            "icon": Array [],
                                                                            "iconName": "chevron-right",
                                                                            "prefix": "fas",
                                                                          }
                                                                        }
                                                                        inverse={false}
                                                                        listItem={false}
                                                                        mask={null}
                                                                        pull={null}
                                                                        pulse={false}
                                                                        rotation={null}
                                                                        size={null}
                                                                        spin={false}
                                                                        swapOpacity={false}
                                                                        symbol={false}
                                                                        title=""
                                                                        transform={null}
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className="svg-inline--fa fa-chevron-right fa-w-NaN fa-fw "
                                                                          data-icon="chevron-right"
                                                                          data-prefix="fas"
                                                                          focusable="false"
                                                                          role="img"
                                                                          style={Object {}}
                                                                          viewBox="0 0 undefined undefined"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            fill="currentColor"
                                                                            style={Object {}}
                                                                          />
                                                                        </svg>
                                                                      </FontAwesomeIcon>
                                                                    </Icon>
                                                                  </div>
                                                                </Box>
                                                                <ModeIconBox
                                                                  key=".1:$BUS"
                                                                  mode="BUS"
                                                                  mr={1}
                                                                >
                                                                  <Box
                                                                    mr={1}
                                                                    title="BUS"
                                                                  >
                                                                    <div
                                                                      className="css-1xe59u8"
                                                                      title="BUS"
                                                                    >
                                                                      <ModeIcon
                                                                        mode="BUS"
                                                                      >
                                                                        <Icon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [],
                                                                              "iconName": "bus",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                        >
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={true}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [],
                                                                                "iconName": "bus",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-bus fa-w-NaN fa-fw "
                                                                              data-icon="bus"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 undefined undefined"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </Icon>
                                                                      </ModeIcon>
                                                                    </div>
                                                                  </Box>
                                                                </ModeIconBox>
                                                                <ModeIconBox
                                                                  key=".1:$TRAM"
                                                                  mode="TRAM"
                                                                  mr={1}
                                                                >
                                                                  <Box
                                                                    mr={1}
                                                                    title="TRAM"
                                                                  >
                                                                    <div
                                                                      className="css-1xe59u8"
                                                                      title="TRAM"
                                                                    >
                                                                      <ModeIcon
                                                                        mode="TRAM"
                                                                      >
                                                                        <Letter>
                                                                          <Text
                                                                            fontFamily="mono"
                                                                            fontSize="14px"
                                                                            fontWeight={600}
                                                                            height="17px"
                                                                            lineHeight="1.5rem"
                                                                            textAlign="center"
                                                                            width="15px"
                                                                          >
                                                                            <Box
                                                                              as="p"
                                                                              fontFamily="mono"
                                                                              fontSize="14px"
                                                                              fontWeight={600}
                                                                              height="17px"
                                                                              lineHeight="1.5rem"
                                                                              textAlign="center"
                                                                              width="15px"
                                                                            >
                                                                              <p
                                                                                className="css-1q2wprf"
                                                                              >
                                                                                T
                                                                              </p>
                                                                            </Box>
                                                                          </Text>
                                                                        </Letter>
                                                                      </ModeIcon>
                                                                    </div>
                                                                  </Box>
                                                                </ModeIconBox>
                                                                <ModeIconBox
                                                                  key=".1:$RAIL"
                                                                  mode="RAIL"
                                                                  mr={1}
                                                                >
                                                                  <Box
                                                                    mr={1}
                                                                    title="RAIL"
                                                                  >
                                                                    <div
                                                                      className="css-1xe59u8"
                                                                      title="RAIL"
                                                                    >
                                                                      <ModeIcon
                                                                        mode="RAIL"
                                                                      >
                                                                        <Icon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [],
                                                                              "iconName": "train",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                        >
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={true}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [],
                                                                                "iconName": "train",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-train fa-w-NaN fa-fw "
                                                                              data-icon="train"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 undefined undefined"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </Icon>
                                                                      </ModeIcon>
                                                                    </div>
                                                                  </Box>
                                                                </ModeIconBox>
                                                                <ModeIconBox
                                                                  key=".1:$SUBWAY"
                                                                  mode="SUBWAY"
                                                                  mr={null}
                                                                >
                                                                  <Box
                                                                    mr={null}
                                                                    title="SUBWAY"
                                                                  >
                                                                    <div
                                                                      className="css-0"
                                                                      title="SUBWAY"
                                                                    >
                                                                      <ModeIcon
                                                                        mode="SUBWAY"
                                                                      >
                                                                        <Icon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [],
                                                                              "iconName": "subway",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                        >
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={true}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [],
                                                                                "iconName": "subway",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-subway fa-w-NaN fa-fw "
                                                                              data-icon="subway"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 undefined undefined"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </Icon>
                                                                      </ModeIcon>
                                                                    </div>
                                                                  </Box>
                                                                </ModeIconBox>
                                                              </div>
                                                            </Box>
                                                          </Flex>
                                                        </ForwardRef>
                                                        <ForwardRef
                                                          anchorEl={
                                                            <div
                                                              class="css-u4p24i"
                                                            >
                                                              <div
                                                                class="css-1el2ag8"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  class="svg-inline--fa fa-chevron-right fa-w-NaN fa-fw "
                                                                  data-icon="chevron-right"
                                                                  data-prefix="fas"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 undefined undefined"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </div>
                                                              <div
                                                                class="css-1xe59u8"
                                                                title="BUS"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  class="svg-inline--fa fa-bus fa-w-NaN fa-fw "
                                                                  data-icon="bus"
                                                                  data-prefix="fas"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 undefined undefined"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </div>
                                                              <div
                                                                class="css-1xe59u8"
                                                                title="TRAM"
                                                              >
                                                                <p
                                                                  class="css-1q2wprf"
                                                                >
                                                                  T
                                                                </p>
                                                              </div>
                                                              <div
                                                                class="css-1xe59u8"
                                                                title="RAIL"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  class="svg-inline--fa fa-train fa-w-NaN fa-fw "
                                                                  data-icon="train"
                                                                  data-prefix="fas"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 undefined undefined"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </div>
                                                              <div
                                                                class="css-0"
                                                                title="SUBWAY"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  class="svg-inline--fa fa-subway fa-w-NaN fa-fw "
                                                                  data-icon="subway"
                                                                  data-prefix="fas"
                                                                  focusable="false"
                                                                  role="img"
                                                                  viewBox="0 0 undefined undefined"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    fill="currentColor"
                                                                  />
                                                                </svg>
                                                              </div>
                                                            </div>
                                                          }
                                                          arrowSize="10px"
                                                          bg="gray.700"
                                                          borderRadius="sm"
                                                          color="whiteAlpha.900"
                                                          fontSize="md"
                                                          fontWeight="medium"
                                                          hasArrow={true}
                                                          isOpen={false}
                                                          maxW="320px"
                                                          modifiers={
                                                            Object {
                                                              "offset": Object {
                                                                "enabled": true,
                                                                "offset": "0, 8",
                                                              },
                                                            }
                                                          }
                                                          mr={null}
                                                          placement="auto"
                                                          pointerEvents="none"
                                                          px="8px"
                                                          py="2px"
                                                          shadow="md"
                                                          timeout={200}
                                                          usePortal={true}
                                                          zIndex={1500}
                                                        />
                                                      </Tooltip>
                                                    </Tip>
                                                  </div>
                                                </Box>
                                              </Flex>
                                            </ForwardRef>
                                          </ModeSummary>
                                        </td>
                                      </Box>
                                    </TDValue>
                                  </tr>
                                  <tr>
                                    <td
                                      colSpan={2}
                                    />
                                  </tr>
                                </tbody>
                              </table>
                            </Box>
                            <Box
                              borderBottom="1px solid #E2E8F0"
                              key=".1"
                              mb={null}
                            >
                              <div
                                className="css-p9uae9"
                              >
                                <Button
                                  _focus={
                                    Object {
                                      "outline": "none",
                                    }
                                  }
                                  borderRadius="0"
                                  onClick={[Function]}
                                  size="sm"
                                  title="expand"
                                  variant="ghost"
                                  variantColor="red"
                                  width="100%"
                                >
                                  <PseudoBox
                                    _active={
                                      Object {
                                        "bg": "red.100",
                                      }
                                    }
                                    _disabled={
                                      Object {
                                        "boxShadow": "none",
                                        "cursor": "not-allowed",
                                        "opacity": "40%",
                                      }
                                    }
                                    _focus={
                                      Object {
                                        "outline": "none",
                                      }
                                    }
                                    _hover={
                                      Object {
                                        "bg": "red.50",
                                      }
                                    }
                                    alignItems="center"
                                    appearance="none"
                                    as="button"
                                    bg="transparent"
                                    borderRadius="0"
                                    color="red.500"
                                    display="inline-flex"
                                    fontSize="sm"
                                    fontWeight="semibold"
                                    height={8}
                                    justifyContent="center"
                                    lineHeight="1.2"
                                    minWidth={8}
                                    onClick={[Function]}
                                    outline="none"
                                    position="relative"
                                    px={3}
                                    title="expand"
                                    transition="all 250ms"
                                    type="button"
                                    userSelect="none"
                                    verticalAlign="middle"
                                    whiteSpace="nowrap"
                                    width="100%"
                                  >
                                    <button
                                      className="css-gq4d16"
                                      onClick={[Function]}
                                      title="expand"
                                      type="button"
                                    >
                                      <Icon
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "chevron-down",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={true}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "chevron-down",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-chevron-down fa-w-NaN fa-fw "
                                            data-icon="chevron-down"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </button>
                                  </PseudoBox>
                                </Button>
                              </div>
                            </Box>
                          </div>
                        </Box>
                      </Flex>
                    </ForwardRef>
                  </ProfileRequestDisplay>
                </ComparisonDisplay>
                <ReactLeafletControl
                  key=".2"
                  mb={4}
                  position="bottomleft"
                >
                  <ForwardRef
                    backgroundColor="white"
                    boxShadow="lg"
                    rounded="md"
                    spacing={3}
                    width="296px"
                  >
                    <Flex
                      backgroundColor="white"
                      boxShadow="lg"
                      direction="column"
                      rounded="md"
                      width="296px"
                    >
                      <Box
                        backgroundColor="white"
                        boxShadow="lg"
                        display="flex"
                        flexDirection="column"
                        rounded="md"
                        width="296px"
                      >
                        <div
                          className="css-a9djx9"
                        >
                          <Heading
                            key=".0"
                            mb={3}
                            pt={4}
                            px={4}
                            size="sm"
                          >
                            <Box
                              as="h2"
                              fontFamily="heading"
                              fontSize="md"
                              fontWeight="bold"
                              lineHeight="shorter"
                              mb={3}
                              pt={4}
                              px={4}
                            >
                              <h2
                                className="css-thnzpe"
                              >
                                <Icon
                                  icon={
                                    Object {
                                      "icon": Array [],
                                      "iconName": "th",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className=""
                                    fixedWidth={true}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [],
                                        "iconName": "th",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-th fa-w-NaN fa-fw "
                                      data-icon="th"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 undefined undefined"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                </Icon>
                                 Access to
                              </h2>
                            </Box>
                          </Heading>
                          <Box
                            key=".1"
                            mb={3}
                            px={4}
                          >
                            <div
                              className="css-1w68sn0"
                            >
                              <Heading
                                size="xs"
                              >
                                <Box
                                  as="h2"
                                  fontFamily="heading"
                                  fontSize="sm"
                                  fontWeight="bold"
                                  lineHeight="shorter"
                                >
                                  <h2
                                    className="css-glel1g"
                                  >
                                    ANALYSIS 1
                                  </h2>
                                </Box>
                              </Heading>
                              <Text>
                                <Box
                                  as="p"
                                  fontFamily="body"
                                >
                                  <p
                                    className="css-fzcsno"
                                  >
                                    undefined within 60 minutes, 50th percentile
                                  </p>
                                </Box>
                              </Text>
                            </div>
                          </Box>
                          <Box
                            key=".2"
                            mb={3}
                            px={4}
                          >
                            <div
                              className="css-1w68sn0"
                            >
                              <Text
                                color="red.500"
                              >
                                <Box
                                  as="p"
                                  color="red.500"
                                  fontFamily="body"
                                >
                                  <p
                                    className="css-1bqbto5"
                                  >
                                    <em>
                                      minus
                                    </em>
                                  </p>
                                </Box>
                              </Text>
                              <Heading
                                size="xs"
                              >
                                <Box
                                  as="h2"
                                  fontFamily="heading"
                                  fontSize="sm"
                                  fontWeight="bold"
                                  lineHeight="shorter"
                                >
                                  <h2
                                    className="css-glel1g"
                                  >
                                    ANALYSIS 2
                                  </h2>
                                </Box>
                              </Heading>
                              <Text>
                                <Box
                                  as="p"
                                  fontFamily="body"
                                >
                                  <p
                                    className="css-fzcsno"
                                  >
                                    undefined within 60 minutes, 50th percentile
                                  </p>
                                </Box>
                              </Text>
                            </div>
                          </Box>
                          <Legend
                            breaks={
                              Array [
                                -1421,
                                -1089,
                                -773,
                                -491,
                                -235,
                                235,
                                491,
                                773,
                                1089,
                                1421,
                                1994,
                              ]
                            }
                            colors={
                              Array [
                                Rgb {
                                  "b": 21,
                                  "g": 15,
                                  "opacity": 0.42,
                                  "r": 165,
                                },
                                Rgb {
                                  "b": 38,
                                  "g": 45,
                                  "opacity": 0.42,
                                  "r": 222,
                                },
                                Rgb {
                                  "b": 74,
                                  "g": 106,
                                  "opacity": 0.42,
                                  "r": 251,
                                },
                                Rgb {
                                  "b": 114,
                                  "g": 146,
                                  "opacity": 0.42,
                                  "r": 252,
                                },
                                Rgb {
                                  "b": 161,
                                  "g": 187,
                                  "opacity": 0.42,
                                  "r": 252,
                                },
                                Rgb {
                                  "b": 255,
                                  "g": 255,
                                  "opacity": 0,
                                  "r": 255,
                                },
                                Rgb {
                                  "b": 239,
                                  "g": 219,
                                  "opacity": 0.42,
                                  "r": 198,
                                },
                                Rgb {
                                  "b": 225,
                                  "g": 202,
                                  "opacity": 0.42,
                                  "r": 158,
                                },
                                Rgb {
                                  "b": 214,
                                  "g": 174,
                                  "opacity": 0.42,
                                  "r": 107,
                                },
                                Rgb {
                                  "b": 189,
                                  "g": 130,
                                  "opacity": 0.42,
                                  "r": 49,
                                },
                                Rgb {
                                  "b": 156,
                                  "g": 81,
                                  "opacity": 0.42,
                                  "r": 8,
                                },
                              ]
                            }
                            key=".3"
                            mb={null}
                            min={-1998}
                          >
                            <ForwardRef
                              borderTop="1px solid #E2E8F0"
                              spacing={0}
                            >
                              <Flex
                                borderTop="1px solid #E2E8F0"
                                direction="column"
                              >
                                <Box
                                  borderTop="1px solid #E2E8F0"
                                  display="flex"
                                  flexDirection="column"
                                >
                                  <div
                                    className="css-1qzxoio"
                                  >
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(8, 81, 156, 1)"
                                      color="#fff"
                                      key=".$break-0"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-14yo73u"
                                      >
                                        1,994 to 1,421
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(49, 130, 189, 1)"
                                      color="#fff"
                                      key=".$break-1"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-12ea82d"
                                      >
                                        1,421 to 1,089
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(107, 174, 214, 1)"
                                      color="#000"
                                      key=".$break-2"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-14al05z"
                                      >
                                        1,089 to 773
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(158, 202, 225, 1)"
                                      color="#000"
                                      key=".$break-3"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-18ae6xo"
                                      >
                                        773 to 491
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(198, 219, 239, 1)"
                                      color="#000"
                                      key=".$break-4"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-votpp9"
                                      >
                                        491 to 235
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(255, 255, 255, 1)"
                                      color="#000"
                                      key=".$break-5"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-9a6xh2"
                                      >
                                        235 to −235 (transparent)
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(252, 187, 161, 1)"
                                      color="#000"
                                      key=".$break-6"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-1vkqfzt"
                                      >
                                        −235 to −491
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(252, 146, 114, 1)"
                                      color="#000"
                                      key=".$break-7"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-1mz3pju"
                                      >
                                        −491 to −773
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(251, 106, 74, 1)"
                                      color="#000"
                                      key=".$break-8"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-eo16cd"
                                      >
                                        −773 to −1,089
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(222, 45, 38, 1)"
                                      color="#fff"
                                      key=".$break-9"
                                      mb={0}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-gpbeli"
                                      >
                                        −1,089 to −1,421
                                      </div>
                                    </PseudoBox>
                                    <PseudoBox
                                      _last={
                                        Object {
                                          "roundedBottom": "md",
                                        }
                                      }
                                      backgroundColor="rgba(165, 15, 21, 1)"
                                      color="#fff"
                                      key=".$break-10"
                                      mb={null}
                                      px={4}
                                      py={1}
                                    >
                                      <div
                                        className="css-mcv2m0"
                                      >
                                        −1,421 to −1,998
                                      </div>
                                    </PseudoBox>
                                  </div>
                                </Box>
                              </Flex>
                            </ForwardRef>
                          </Legend>
                        </div>
                      </Box>
                    </Flex>
                  </ForwardRef>
                </ReactLeafletControl>
                <Box
                  key=".3"
                  mb={null}
                  p={4}
                >
                  <div
                    className="css-q5fqw0"
                  >
                    <AggregationArea>
                      <ForwardRef
                        spacing={4}
                      >
                        <Flex
                          direction="column"
                        >
                          <Box
                            display="flex"
                            flexDirection="column"
                          >
                            <div
                              className="css-j7qwjs"
                            >
                              <FormControl
                                key=".0"
                                mb={4}
                              >
                                <Box
                                  mb={4}
                                  role="group"
                                >
                                  <div
                                    className="css-acwcvw"
                                    role="group"
                                  >
                                    <FormLabel>
                                      <Box
                                        as="label"
                                        display="inline-block"
                                        fontSize="md"
                                        fontWeight="medium"
                                        opacity="1"
                                        pb="4px"
                                        pr="12px"
                                        textAlign="left"
                                        verticalAlign="middle"
                                      >
                                        <label
                                          className="css-176s5fq"
                                        >
                                          Aggregate results to
                                        </label>
                                      </Box>
                                    </FormLabel>
                                    <ForwardRef
                                      getOptionLabel={[Function]}
                                      getOptionValue={[Function]}
                                      isClearable={true}
                                      isLoading={false}
                                      name="aggregateTo"
                                      onChange={[Function]}
                                      options={Array []}
                                    >
                                      <ReactSelect
                                        getOptionLabel={[Function]}
                                        getOptionValue={[Function]}
                                        innerRef={null}
                                        isClearable={true}
                                        isLoading={false}
                                        name="aggregateTo"
                                        onChange={[Function]}
                                        options={Array []}
                                        styles={
                                          Object {
                                            "control": [Function],
                                            "menu": [Function],
                                            "option": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="ReactSelectMock"
                                        />
                                      </ReactSelect>
                                    </ForwardRef>
                                  </div>
                                </Box>
                              </FormControl>
                              <Button
                                isFullWidth={true}
                                key=".1"
                                leftIcon="chevron-down"
                                mb={null}
                                onClick={[Function]}
                              >
                                <PseudoBox
                                  _active={
                                    Object {
                                      "bg": "gray.300",
                                    }
                                  }
                                  _disabled={
                                    Object {
                                      "boxShadow": "none",
                                      "cursor": "not-allowed",
                                      "opacity": "40%",
                                    }
                                  }
                                  _focus={
                                    Object {
                                      "boxShadow": "outline",
                                    }
                                  }
                                  _hover={
                                    Object {
                                      "bg": "gray.200",
                                    }
                                  }
                                  alignItems="center"
                                  appearance="none"
                                  as="button"
                                  bg="gray.100"
                                  borderRadius="md"
                                  display="inline-flex"
                                  fontSize="md"
                                  fontWeight="semibold"
                                  height={10}
                                  justifyContent="center"
                                  lineHeight="1.2"
                                  mb={null}
                                  minWidth={10}
                                  onClick={[Function]}
                                  outline="none"
                                  position="relative"
                                  px={4}
                                  transition="all 250ms"
                                  type="button"
                                  userSelect="none"
                                  verticalAlign="middle"
                                  whiteSpace="nowrap"
                                  width="full"
                                >
                                  <button
                                    className="css-z70eed"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ButtonIcon
                                      icon="chevron-down"
                                      ml={-1}
                                      mr={2}
                                    >
                                      <Icon
                                        aria-hidden="true"
                                        color="currentColor"
                                        focusable="false"
                                        ml={-1}
                                        mr={2}
                                        name="chevron-down"
                                      >
                                        <Styled(div)
                                          aria-hidden="true"
                                          as="svg"
                                          color="currentColor"
                                          display="inline-block"
                                          focusable="false"
                                          ml={-1}
                                          mr={2}
                                          role="presentation"
                                          size="1em"
                                          verticalAlign="middle"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="css-yxiis9"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </Styled(div)>
                                      </Icon>
                                    </ButtonIcon>
                                    Upload new aggregation area
                                  </button>
                                </PseudoBox>
                              </Button>
                            </div>
                          </Box>
                        </Flex>
                      </ForwardRef>
                    </AggregationArea>
                  </div>
                </Box>
              </div>
            </Box>
          </Flex>
        </ForwardRef>
      </RegionalResults>
    </div>
  </Map>
</WithMap(RegionalResults)>
`;
