// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component AddTripPattern snapshot(mount) 1`] = `
<AddTripPattern
  allPhaseFromTimetableStops={Array []}
  allStops={Array []}
  gtfsStops={Array []}
  mapState={null}
  modification={
    Object {
      "_id": "1234",
      "accessGroup": "accessGroupName",
      "bidirectional": false,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "name": "Test Modification",
      "nonce": "12345",
      "projectId": "1",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        Object {
          "fromStopId": "1",
          "geometry": Object {
            "coordinates": Array [
              Array [
                -122.0246,
                36.9707,
              ],
              Array [
                -122.0279,
                37.049,
              ],
              Array [
                -121.9799,
                37.2299,
              ],
              Array [
                -121.9445,
                37.324,
              ],
              Array [
                -121.936,
                37.353,
              ],
              Array [
                -121.924,
                37.365,
              ],
            ],
            "type": "LineString",
          },
          "spacing": 3000,
          "stopAtEnd": false,
          "stopAtStart": false,
          "toStopId": null,
        },
      ],
      "timetables": Array [
        Object {
          "_id": "timetable-id",
          "dwellTime": 10,
          "dwellTimes": Array [
            12,
          ],
          "endTime": 57600,
          "exactTimes": false,
          "friday": true,
          "headwaySecs": 900,
          "modificationId": "1234",
          "modificationName": "Test Modification",
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "phaseAtStop": "",
          "phaseFromStop": "",
          "phaseFromTimetable": "",
          "phaseSeconds": 300,
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        true,
      ],
    }
  }
  modificationStops={Array []}
  numbeOfStops={0}
  projectTimetables={Array []}
  qualifiedStops={Array []}
  segmentDistances={Array []}
  timetables={Array []}
  update={[MockFunction]}
>
  <ForwardRef
    spacing={4}
  >
    <Flex
      direction="column"
    >
      <Box
        display="flex"
        flexDirection="column"
      >
        <div
          className="css-j7qwjs"
        >
          <DynamicMockedComponent
            bidirectional={false}
            key=".0"
            mb={4}
            segments={
              Array [
                Object {
                  "fromStopId": "1",
                  "geometry": Object {
                    "coordinates": Array [
                      Array [
                        -122.0246,
                        36.9707,
                      ],
                      Array [
                        -122.0279,
                        37.049,
                      ],
                      Array [
                        -121.9799,
                        37.2299,
                      ],
                      Array [
                        -121.9445,
                        37.324,
                      ],
                      Array [
                        -121.936,
                        37.353,
                      ],
                      Array [
                        -121.924,
                        37.365,
                      ],
                    ],
                    "type": "LineString",
                  },
                  "spacing": 3000,
                  "stopAtEnd": false,
                  "stopAtStart": false,
                  "toStopId": null,
                },
              ]
            }
          />
          <TransitModeSelector
            key=".1"
            mb={4}
            onChange={[Function]}
          >
            <FormControl
              mb={4}
            >
              <Box
                mb={4}
                role="group"
              >
                <div
                  className="css-acwcvw"
                  role="group"
                >
                  <FormLabel
                    htmlFor="transitMode"
                  >
                    <Box
                      as="label"
                      display="inline-block"
                      fontSize="md"
                      fontWeight="medium"
                      htmlFor="transitMode"
                      opacity="1"
                      pb="4px"
                      pr="12px"
                      textAlign="left"
                      verticalAlign="middle"
                    >
                      <label
                        className="css-176s5fq"
                        htmlFor="transitMode"
                      >
                        Transit Mode
                      </label>
                    </Box>
                  </FormLabel>
                  <Select
                    id="transitMode"
                    onChange={[Function]}
                  >
                    <Box
                      position="relative"
                      width="100%"
                    >
                      <div
                        className="css-1jke4yk"
                      >
                        <ForwardRef(SelectInput)
                          color="inherit"
                          id="transitMode"
                          onChange={[Function]}
                        >
                          <Input
                            appearance="none"
                            as="select"
                            color="inherit"
                            errorBorderColor="red.500"
                            focusBorderColor="blue.500"
                            id="transitMode"
                            isFullWidth={true}
                            lineHeight="normal"
                            onChange={[Function]}
                            pb="px"
                            pr="2rem"
                            size="md"
                            variant="outline"
                          >
                            <PseudoBox
                              _disabled={
                                Object {
                                  "cursor": "not-allowed",
                                  "opacity": "0.4",
                                }
                              }
                              _focus={
                                Object {
                                  "borderColor": "#3182ce",
                                  "boxShadow": "0 0 0 1px #3182ce",
                                  "zIndex": 1,
                                }
                              }
                              _hover={
                                Object {
                                  "borderColor": "gray.300",
                                }
                              }
                              _invalid={
                                Object {
                                  "borderColor": "#e53e3e",
                                  "boxShadow": "0 0 0 1px #e53e3e",
                                }
                              }
                              _readOnly={
                                Object {
                                  "bg": "transparent",
                                  "boxShadow": "none !important",
                                  "userSelect": "all",
                                }
                              }
                              alignItems="center"
                              appearance="none"
                              as="select"
                              bg="white"
                              border="1px"
                              borderColor="inherit"
                              color="inherit"
                              display="flex"
                              fontSize="md"
                              height={10}
                              id="transitMode"
                              lineHeight="normal"
                              onChange={[Function]}
                              outline="none"
                              pb="px"
                              position="relative"
                              pr="2rem"
                              px={4}
                              rounded="md"
                              transition="all 0.2s"
                              width="100%"
                            >
                              <select
                                className="css-16ut77p"
                                id="transitMode"
                                onChange={[Function]}
                              >
                                <option
                                  key="TRAM"
                                  value={0}
                                >
                                  Tram
                                </option>
                                <option
                                  key="SUBWAY"
                                  value={1}
                                >
                                  Subway
                                </option>
                                <option
                                  key="RAIL"
                                  value={2}
                                >
                                  Rail
                                </option>
                                <option
                                  key="BUS"
                                  value={3}
                                >
                                  Bus
                                </option>
                                <option
                                  key="FERRY"
                                  value={4}
                                >
                                  Ferry
                                </option>
                                <option
                                  key="CABLE_CAR"
                                  value={5}
                                >
                                  Cable Car
                                </option>
                                <option
                                  key="GONDOLA"
                                  value={6}
                                >
                                  Gondola
                                </option>
                                <option
                                  key="FUNICULAR"
                                  value={7}
                                >
                                  Funicular
                                </option>
                              </select>
                            </PseudoBox>
                          </Input>
                        </ForwardRef(SelectInput)>
                        <ForwardRef(SelectIconWrapper)
                          color="inherit"
                          opacity={null}
                        >
                          <Box
                            alignItems="center"
                            color="inherit"
                            display="inline-flex"
                            height="100%"
                            justifyContent="center"
                            opacity={null}
                            pointerEvents="none"
                            position="absolute"
                            right="0.5rem"
                            top="50%"
                            transform="translateY(-50%)"
                            width="1.5rem"
                            zIndex={2}
                          >
                            <div
                              className="css-1lepn2w"
                            >
                              <EnhancedIcon
                                aria-hidden="true"
                                focusable="false"
                                icon="chevron-down"
                                size={5}
                              >
                                <Icon
                                  aria-hidden="true"
                                  color="currentColor"
                                  focusable="false"
                                  name="chevron-down"
                                  size={5}
                                >
                                  <Styled(div)
                                    aria-hidden="true"
                                    as="svg"
                                    color="currentColor"
                                    display="inline-block"
                                    focusable="false"
                                    role="presentation"
                                    size={5}
                                    verticalAlign="middle"
                                    viewBox="0 0 24 24"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="css-12c4avn"
                                      focusable="false"
                                      role="presentation"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        fill="currentColor"
                                      />
                                    </svg>
                                  </Styled(div)>
                                </Icon>
                              </EnhancedIcon>
                            </div>
                          </Box>
                        </ForwardRef(SelectIconWrapper)>
                      </div>
                    </Box>
                  </Select>
                  <FormHelperText>
                    <Text
                      color="gray.500"
                      fontSize="sm"
                      id={null}
                      lineHeight="normal"
                      mt={2}
                    >
                      <Box
                        as="p"
                        color="gray.500"
                        fontFamily="body"
                        fontSize="sm"
                        id={null}
                        lineHeight="normal"
                        mt={2}
                      >
                        <p
                          className="css-1t1cls9"
                          id={null}
                        >
                          Note: routing engine versions prior to v4.6.0 will use tram regardless.
                        </p>
                      </Box>
                    </Text>
                  </FormHelperText>
                </div>
              </Box>
            </FormControl>
          </TransitModeSelector>
          <FormControl
            className="DEV"
            key=".2"
            mb={4}
          >
            <Box
              className="DEV"
              mb={4}
              role="group"
            >
              <div
                className="DEV css-acwcvw"
                role="group"
              >
                <FormLabel
                  htmlFor="routeColor"
                >
                  <Box
                    as="label"
                    display="inline-block"
                    fontSize="md"
                    fontWeight="medium"
                    htmlFor="routeColor"
                    opacity="1"
                    pb="4px"
                    pr="12px"
                    textAlign="left"
                    verticalAlign="middle"
                  >
                    <label
                      className="css-176s5fq"
                      htmlFor="routeColor"
                    >
                      Route Color
                    </label>
                  </Box>
                </FormLabel>
                <Input
                  as="input"
                  errorBorderColor="red.500"
                  focusBorderColor="blue.500"
                  id="routeColor"
                  isFullWidth={true}
                  onChange={[Function]}
                  size="md"
                  value=""
                  variant="outline"
                >
                  <PseudoBox
                    _disabled={
                      Object {
                        "cursor": "not-allowed",
                        "opacity": "0.4",
                      }
                    }
                    _focus={
                      Object {
                        "borderColor": "#3182ce",
                        "boxShadow": "0 0 0 1px #3182ce",
                        "zIndex": 1,
                      }
                    }
                    _hover={
                      Object {
                        "borderColor": "gray.300",
                      }
                    }
                    _invalid={
                      Object {
                        "borderColor": "#e53e3e",
                        "boxShadow": "0 0 0 1px #e53e3e",
                      }
                    }
                    _readOnly={
                      Object {
                        "bg": "transparent",
                        "boxShadow": "none !important",
                        "userSelect": "all",
                      }
                    }
                    alignItems="center"
                    appearance="none"
                    as="input"
                    bg="white"
                    border="1px"
                    borderColor="inherit"
                    display="flex"
                    fontSize="md"
                    height={10}
                    id="routeColor"
                    onChange={[Function]}
                    outline="none"
                    position="relative"
                    px={4}
                    rounded="md"
                    transition="all 0.2s"
                    value=""
                    width="100%"
                  >
                    <input
                      className="css-1ga4kqw"
                      id="routeColor"
                      onChange={[Function]}
                      value=""
                    />
                  </PseudoBox>
                </Input>
                <FormHelperText
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "For display purposes (ex: with <a href=\\"https://blog.conveyal.com/upgraded-outreach-serverless-transit-accessibility-with-taui-f90d6d51e177\\" target=\\"_blank\\">Taui</a>). Must be a 6-digit hexadecimal number.",
                    }
                  }
                >
                  <Text
                    color="gray.500"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "For display purposes (ex: with <a href=\\"https://blog.conveyal.com/upgraded-outreach-serverless-transit-accessibility-with-taui-f90d6d51e177\\" target=\\"_blank\\">Taui</a>). Must be a 6-digit hexadecimal number.",
                      }
                    }
                    fontSize="sm"
                    id={null}
                    lineHeight="normal"
                    mt={2}
                  >
                    <Box
                      as="p"
                      color="gray.500"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "For display purposes (ex: with <a href=\\"https://blog.conveyal.com/upgraded-outreach-serverless-transit-accessibility-with-taui-f90d6d51e177\\" target=\\"_blank\\">Taui</a>). Must be a 6-digit hexadecimal number.",
                        }
                      }
                      fontFamily="body"
                      fontSize="sm"
                      id={null}
                      lineHeight="normal"
                      mt={2}
                    >
                      <p
                        className="css-1t1cls9"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "For display purposes (ex: with <a href=\\"https://blog.conveyal.com/upgraded-outreach-serverless-transit-accessibility-with-taui-f90d6d51e177\\" target=\\"_blank\\">Taui</a>). Must be a 6-digit hexadecimal number.",
                          }
                        }
                        id={null}
                      />
                    </Box>
                  </Text>
                </FormHelperText>
              </div>
            </Box>
          </FormControl>
          <EditAlignment
            isEditing={false}
            key=".3"
            mb={4}
            modification={
              Object {
                "_id": "1234",
                "accessGroup": "accessGroupName",
                "bidirectional": false,
                "createdAt": "2017-11-08T12:30:50.133Z",
                "createdBy": "person@gmail.com",
                "description": "Mock description",
                "entries": Array [],
                "feed": "1",
                "name": "Test Modification",
                "nonce": "12345",
                "projectId": "1",
                "routes": Array [
                  "route1",
                ],
                "segments": Array [
                  Object {
                    "fromStopId": "1",
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "spacing": 3000,
                    "stopAtEnd": false,
                    "stopAtStart": false,
                    "toStopId": null,
                  },
                ],
                "timetables": Array [
                  Object {
                    "_id": "timetable-id",
                    "dwellTime": 10,
                    "dwellTimes": Array [
                      12,
                    ],
                    "endTime": 57600,
                    "exactTimes": false,
                    "friday": true,
                    "headwaySecs": 900,
                    "modificationId": "1234",
                    "modificationName": "Test Modification",
                    "monday": true,
                    "name": "Test timetable",
                    "patternTrips": Array [
                      "abcd",
                    ],
                    "phaseAtStop": "",
                    "phaseFromStop": "",
                    "phaseFromTimetable": "",
                    "phaseSeconds": 300,
                    "saturday": false,
                    "segmentSpeeds": Array [],
                    "sourceTrip": "abcd",
                    "startTime": 28800,
                    "sunday": false,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true,
                  },
                ],
                "trips": Array [
                  "abcd",
                ],
                "type": "add-trip-pattern",
                "updatedAt": "2017-11-08T12:31:19.602Z",
                "updatedBy": "person@gmail.com",
                "variants": Array [
                  true,
                ],
              }
            }
            numberOfStops={16}
            setIsEditing={[Function]}
            update={[MockFunction]}
          >
            <ForwardRef
              mb={4}
              spacing={4}
            >
              <Flex
                direction="column"
                mb={4}
              >
                <Box
                  display="flex"
                  flexDirection="column"
                  mb={4}
                >
                  <div
                    className="css-opcg3f"
                  >
                    <Heading
                      key=".1"
                      mb={4}
                      size="sm"
                    >
                      <Box
                        as="h2"
                        fontFamily="heading"
                        fontSize="md"
                        fontWeight="bold"
                        lineHeight="shorter"
                        mb={4}
                      >
                        <h2
                          className="css-35hltn"
                        >
                          Route Geometry
                        </h2>
                      </Box>
                    </Heading>
                    <Text
                      key=".3"
                      mb={4}
                    >
                      <Box
                        as="p"
                        fontFamily="body"
                        mb={4}
                      >
                        <p
                          className="css-zwncle"
                        >
                          16 stops over 45.21 km
                        </p>
                      </Box>
                    </Text>
                    <Button
                      isFullWidth={true}
                      key=".4"
                      leftIcon="edit"
                      mb={4}
                      onClick={[Function]}
                      variantColor="yellow"
                    >
                      <PseudoBox
                        _active={
                          Object {
                            "bg": "yellow.700",
                          }
                        }
                        _disabled={
                          Object {
                            "boxShadow": "none",
                            "cursor": "not-allowed",
                            "opacity": "40%",
                          }
                        }
                        _focus={
                          Object {
                            "boxShadow": "outline",
                          }
                        }
                        _hover={
                          Object {
                            "bg": "yellow.600",
                          }
                        }
                        alignItems="center"
                        appearance="none"
                        as="button"
                        bg="yellow.500"
                        borderRadius="md"
                        color="white"
                        display="inline-flex"
                        fontSize="md"
                        fontWeight="semibold"
                        height={10}
                        justifyContent="center"
                        lineHeight="1.2"
                        mb={4}
                        minWidth={10}
                        onClick={[Function]}
                        outline="none"
                        position="relative"
                        px={4}
                        transition="all 250ms"
                        type="button"
                        userSelect="none"
                        verticalAlign="middle"
                        whiteSpace="nowrap"
                        width="full"
                      >
                        <button
                          className="css-emnr3w"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonIcon
                            icon="edit"
                            ml={-1}
                            mr={2}
                          >
                            <Icon
                              aria-hidden="true"
                              color="currentColor"
                              focusable="false"
                              ml={-1}
                              mr={2}
                              name="edit"
                            >
                              <Styled(div)
                                aria-hidden="true"
                                as="svg"
                                color="currentColor"
                                display="inline-block"
                                focusable="false"
                                ml={-1}
                                mr={2}
                                role="presentation"
                                size="1em"
                                verticalAlign="middle"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="css-yxiis9"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <g
                                    fill="none"
                                    stroke="currentColor"
                                    strokeLinecap="full"
                                    strokeWidth="2"
                                  >
                                    <path
                                      d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
                                    />
                                    <path
                                      d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
                                    />
                                  </g>
                                </svg>
                              </Styled(div)>
                            </Icon>
                          </ButtonIcon>
                          Edit route geometry
                        </button>
                      </PseudoBox>
                    </Button>
                    <Checkbox
                      fontWeight="normal"
                      isChecked={true}
                      key=".6"
                      mb={4}
                      onChange={[Function]}
                    >
                      <Box
                        alignItems="center"
                        as="label"
                        cursor="pointer"
                        display="inline-flex"
                        fontWeight="normal"
                        mb={4}
                        verticalAlign="top"
                      >
                        <label
                          className="css-got82x"
                        >
                          <VisuallyHidden
                            aria-checked={true}
                            as="input"
                            checked={true}
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <input
                              aria-checked={true}
                              checked={true}
                              className="css-1gy22ay"
                              onChange={[Function]}
                              type="checkbox"
                            />
                          </VisuallyHidden>
                          <ControlBox
                            _checked={
                              Object {
                                "bg": "blue.500",
                                "borderColor": "blue.500",
                                "color": undefined,
                              }
                            }
                            _checkedAndDisabled={
                              Object {
                                "bg": "gray.200",
                                "borderColor": "gray.200",
                                "color": "gray.500",
                              }
                            }
                            _disabled={
                              Object {
                                "bg": "gray.100",
                                "borderColor": "gray.100",
                              }
                            }
                            _focus={
                              Object {
                                "boxShadow": "outline",
                              }
                            }
                            _invalid={
                              Object {
                                "borderColor": "red.500",
                              }
                            }
                            alignItems="center"
                            aria-hidden="true"
                            border="2px"
                            borderColor="inherit"
                            color="white"
                            display="inline-flex"
                            flexShrink="0"
                            justifyContent="center"
                            opacity={1}
                            rounded="sm"
                            size={4}
                            transition="background-color 120ms, box-shadow 250ms"
                            userSelect="none"
                          >
                            <div
                              aria-hidden="true"
                              className="css-nlndso"
                            >
                              <Icon
                                name="check"
                                size="10px"
                                transition="transform 240ms, opacity 240ms"
                              >
                                <Styled(div)
                                  as="svg"
                                  color="currentColor"
                                  display="inline-block"
                                  focusable={false}
                                  role="presentation"
                                  size="10px"
                                  transition="transform 240ms, opacity 240ms"
                                  verticalAlign="middle"
                                  viewBox="0 0 14 14"
                                >
                                  <svg
                                    className="css-1vhqk79"
                                    focusable={false}
                                    role="presentation"
                                    viewBox="0 0 14 14"
                                  >
                                    <g
                                      fill="currentColor"
                                    >
                                      <polygon
                                        points="5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039"
                                      />
                                    </g>
                                  </svg>
                                </Styled(div)>
                              </Icon>
                            </div>
                          </ControlBox>
                          <Box
                            fontSize="md"
                            ml={2}
                            opacity={1}
                            userSelect="none"
                          >
                            <div
                              className="css-6qsuox"
                            >
                              Auto-create stops at set spacing
                            </div>
                          </Box>
                        </label>
                      </Box>
                    </Checkbox>
                    <NumberInput
                      key=".7"
                      label="Stop spacing"
                      mb={4}
                      onChange={[Function]}
                      test={[Function]}
                      units="meters"
                      value={3000}
                    >
                      <FormControl
                        isInvalid={false}
                        mb={4}
                      >
                        <Box
                          mb={4}
                          role="group"
                        >
                          <div
                            className="css-acwcvw"
                            role="group"
                          >
                            <FormLabel
                              htmlFor="00000000-0000-0000-0000-000000000000"
                            >
                              <Box
                                as="label"
                                display="inline-block"
                                fontSize="md"
                                fontWeight="medium"
                                htmlFor="00000000-0000-0000-0000-000000000000"
                                opacity="1"
                                pb="4px"
                                pr="12px"
                                textAlign="left"
                                verticalAlign="middle"
                              >
                                <label
                                  className="css-176s5fq"
                                  htmlFor="00000000-0000-0000-0000-000000000000"
                                >
                                  Stop spacing
                                </label>
                              </Box>
                            </FormLabel>
                            <InputGroup>
                              <Box
                                display="flex"
                                position="relative"
                              >
                                <div
                                  className="css-kjafn5"
                                >
                                  <Input
                                    as="input"
                                    errorBorderColor="red.500"
                                    focusBorderColor="blue.500"
                                    id="00000000-0000-0000-0000-000000000000"
                                    isFullWidth={true}
                                    isInvalid={false}
                                    isValid={true}
                                    key=".0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    pl={null}
                                    placeholder=""
                                    pr={null}
                                    size="md"
                                    type="text"
                                    value={3000}
                                    variant="outline"
                                  >
                                    <PseudoBox
                                      _disabled={
                                        Object {
                                          "cursor": "not-allowed",
                                          "opacity": "0.4",
                                        }
                                      }
                                      _focus={
                                        Object {
                                          "borderColor": "#3182ce",
                                          "boxShadow": "0 0 0 1px #3182ce",
                                          "zIndex": 1,
                                        }
                                      }
                                      _hover={
                                        Object {
                                          "borderColor": "gray.300",
                                        }
                                      }
                                      _invalid={
                                        Object {
                                          "borderColor": "#e53e3e",
                                          "boxShadow": "0 0 0 1px #e53e3e",
                                        }
                                      }
                                      _readOnly={
                                        Object {
                                          "bg": "transparent",
                                          "boxShadow": "none !important",
                                          "userSelect": "all",
                                        }
                                      }
                                      alignItems="center"
                                      appearance="none"
                                      aria-invalid={false}
                                      as="input"
                                      bg="white"
                                      border="1px"
                                      borderColor="inherit"
                                      display="flex"
                                      fontSize="md"
                                      height={10}
                                      id="00000000-0000-0000-0000-000000000000"
                                      isValid={true}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      outline="none"
                                      pl={null}
                                      placeholder=""
                                      position="relative"
                                      pr={null}
                                      px={4}
                                      rounded="md"
                                      transition="all 0.2s"
                                      type="text"
                                      value={3000}
                                      width="100%"
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="css-1ga4kqw"
                                        id="00000000-0000-0000-0000-000000000000"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder=""
                                        type="text"
                                        value={3000}
                                      />
                                    </PseudoBox>
                                  </Input>
                                  <InputRightElement
                                    color="gray.400"
                                    key=".1"
                                    mr={4}
                                    size="md"
                                    userSelect="none"
                                    width="unset"
                                  >
                                    <InputElement
                                      color="gray.400"
                                      mr={4}
                                      placement="right"
                                      size="md"
                                      userSelect="none"
                                      width="unset"
                                    >
                                      <Box
                                        alignItems="center"
                                        color="gray.400"
                                        display="flex"
                                        fontSize="md"
                                        height={10}
                                        justifyContent="center"
                                        mr={4}
                                        position="absolute"
                                        right="0"
                                        top="0"
                                        userSelect="none"
                                        width="unset"
                                        zIndex={2}
                                      >
                                        <div
                                          className="css-1he2y93"
                                        >
                                          meters
                                        </div>
                                      </Box>
                                    </InputElement>
                                  </InputRightElement>
                                </div>
                              </Box>
                            </InputGroup>
                          </div>
                        </Box>
                      </FormControl>
                    </NumberInput>
                    <Checkbox
                      fontWeight="normal"
                      isChecked={false}
                      isDisabled={true}
                      key=".8"
                      mb={4}
                      onChange={[Function]}
                    >
                      <Box
                        alignItems="center"
                        as="label"
                        cursor="not-allowed"
                        display="inline-flex"
                        fontWeight="normal"
                        mb={4}
                        verticalAlign="top"
                      >
                        <label
                          className="css-8syznr"
                        >
                          <VisuallyHidden
                            aria-checked={false}
                            as="input"
                            checked={false}
                            disabled={true}
                            onChange={[Function]}
                            type="checkbox"
                          >
                            <input
                              aria-checked={false}
                              checked={false}
                              className="css-1gy22ay"
                              disabled={true}
                              onChange={[Function]}
                              type="checkbox"
                            />
                          </VisuallyHidden>
                          <ControlBox
                            _checked={
                              Object {
                                "bg": "blue.500",
                                "borderColor": "blue.500",
                                "color": undefined,
                              }
                            }
                            _checkedAndDisabled={
                              Object {
                                "bg": "gray.200",
                                "borderColor": "gray.200",
                                "color": "gray.500",
                              }
                            }
                            _disabled={
                              Object {
                                "bg": "gray.100",
                                "borderColor": "gray.100",
                              }
                            }
                            _focus={
                              Object {
                                "boxShadow": "outline",
                              }
                            }
                            _invalid={
                              Object {
                                "borderColor": "red.500",
                              }
                            }
                            alignItems="center"
                            aria-hidden="true"
                            border="2px"
                            borderColor="inherit"
                            color="white"
                            display="inline-flex"
                            flexShrink="0"
                            justifyContent="center"
                            opacity={1}
                            rounded="sm"
                            size={4}
                            transition="background-color 120ms, box-shadow 250ms"
                            userSelect="none"
                          >
                            <div
                              aria-hidden="true"
                              className="css-nlndso"
                            >
                              <Icon
                                name="check"
                                size="10px"
                                transition="transform 240ms, opacity 240ms"
                              >
                                <Styled(div)
                                  as="svg"
                                  color="currentColor"
                                  display="inline-block"
                                  focusable={false}
                                  role="presentation"
                                  size="10px"
                                  transition="transform 240ms, opacity 240ms"
                                  verticalAlign="middle"
                                  viewBox="0 0 14 14"
                                >
                                  <svg
                                    className="css-1vhqk79"
                                    focusable={false}
                                    role="presentation"
                                    viewBox="0 0 14 14"
                                  >
                                    <g
                                      fill="currentColor"
                                    >
                                      <polygon
                                        points="5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039"
                                      />
                                    </g>
                                  </svg>
                                </Styled(div)>
                              </Icon>
                            </div>
                          </ControlBox>
                          <Box
                            fontSize="md"
                            ml={2}
                            opacity={0.4}
                            userSelect="none"
                          >
                            <div
                              className="css-wfglws"
                            >
                              Bidirectional
                            </div>
                          </Box>
                        </label>
                      </Box>
                    </Checkbox>
                    <Alert
                      key=".9"
                      mb={null}
                      status="info"
                    >
                      <Box
                        alignItems="center"
                        bg="blue.100"
                        display="flex"
                        mb={null}
                        overflow="hidden"
                        pb={3}
                        pl={4}
                        position="relative"
                        pr={4}
                        pt={3}
                        role="alert"
                      >
                        <div
                          className="css-127nqbe"
                          role="alert"
                        >
                          Modification cannot be bidirectional because timetables in this modification have phasing information.
                        </div>
                      </Box>
                    </Alert>
                  </div>
                </Box>
              </Flex>
            </ForwardRef>
          </EditAlignment>
          <Timetables
            key=".4"
            mb={null}
            modification={
              Object {
                "_id": "1234",
                "accessGroup": "accessGroupName",
                "bidirectional": false,
                "createdAt": "2017-11-08T12:30:50.133Z",
                "createdBy": "person@gmail.com",
                "description": "Mock description",
                "entries": Array [],
                "feed": "1",
                "name": "Test Modification",
                "nonce": "12345",
                "projectId": "1",
                "routes": Array [
                  "route1",
                ],
                "segments": Array [
                  Object {
                    "fromStopId": "1",
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "spacing": 3000,
                    "stopAtEnd": false,
                    "stopAtStart": false,
                    "toStopId": null,
                  },
                ],
                "timetables": Array [
                  Object {
                    "_id": "timetable-id",
                    "dwellTime": 10,
                    "dwellTimes": Array [
                      12,
                    ],
                    "endTime": 57600,
                    "exactTimes": false,
                    "friday": true,
                    "headwaySecs": 900,
                    "modificationId": "1234",
                    "modificationName": "Test Modification",
                    "monday": true,
                    "name": "Test timetable",
                    "patternTrips": Array [
                      "abcd",
                    ],
                    "phaseAtStop": "",
                    "phaseFromStop": "",
                    "phaseFromTimetable": "",
                    "phaseSeconds": 300,
                    "saturday": false,
                    "segmentSpeeds": Array [],
                    "sourceTrip": "abcd",
                    "startTime": 28800,
                    "sunday": false,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true,
                  },
                ],
                "trips": Array [
                  "abcd",
                ],
                "type": "add-trip-pattern",
                "updatedAt": "2017-11-08T12:31:19.602Z",
                "updatedBy": "person@gmail.com",
                "variants": Array [
                  true,
                ],
              }
            }
            modificationStops={
              Array [
                Object {
                  "stop_id": "1:undefined",
                },
              ]
            }
            numberOfStops={16}
            timetables={
              Array [
                Object {
                  "_id": "timetable-id",
                  "dwellTime": 10,
                  "dwellTimes": Array [
                    12,
                  ],
                  "endTime": 57600,
                  "exactTimes": false,
                  "friday": true,
                  "headwaySecs": 900,
                  "modificationId": "1234",
                  "modificationName": "Test Modification",
                  "monday": true,
                  "name": "Test timetable",
                  "patternTrips": Array [
                    "abcd",
                  ],
                  "phaseAtStop": "",
                  "phaseFromStop": "",
                  "phaseFromTimetable": "",
                  "phaseSeconds": 300,
                  "saturday": false,
                  "segmentSpeeds": Array [],
                  "sourceTrip": "abcd",
                  "startTime": 28800,
                  "sunday": false,
                  "thursday": true,
                  "tuesday": true,
                  "wednesday": true,
                },
              ]
            }
            update={[MockFunction]}
          >
            <ForwardRef
              spacing={4}
            >
              <Flex
                direction="column"
              >
                <Box
                  display="flex"
                  flexDirection="column"
                >
                  <div
                    className="css-j7qwjs"
                  >
                    <Heading
                      key=".0"
                      mb={4}
                      size="md"
                    >
                      <Box
                        as="h2"
                        fontFamily="heading"
                        fontSize="xl"
                        fontWeight="bold"
                        lineHeight="shorter"
                        mb={4}
                      >
                        <h2
                          className="css-k9oqgk"
                        >
                          Timetables (
                          1
                          )
                        </h2>
                      </Box>
                    </Heading>
                    <Button
                      isFullWidth={true}
                      key=".2"
                      leftIcon="small-add"
                      mb={4}
                      onClick={[Function]}
                      variantColor="green"
                    >
                      <PseudoBox
                        _active={
                          Object {
                            "bg": "green.700",
                          }
                        }
                        _disabled={
                          Object {
                            "boxShadow": "none",
                            "cursor": "not-allowed",
                            "opacity": "40%",
                          }
                        }
                        _focus={
                          Object {
                            "boxShadow": "outline",
                          }
                        }
                        _hover={
                          Object {
                            "bg": "green.600",
                          }
                        }
                        alignItems="center"
                        appearance="none"
                        as="button"
                        bg="green.500"
                        borderRadius="md"
                        color="white"
                        display="inline-flex"
                        fontSize="md"
                        fontWeight="semibold"
                        height={10}
                        justifyContent="center"
                        lineHeight="1.2"
                        mb={4}
                        minWidth={10}
                        onClick={[Function]}
                        outline="none"
                        position="relative"
                        px={4}
                        transition="all 250ms"
                        type="button"
                        userSelect="none"
                        verticalAlign="middle"
                        whiteSpace="nowrap"
                        width="full"
                      >
                        <button
                          className="css-bilnpl"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonIcon
                            icon="small-add"
                            ml={-1}
                            mr={2}
                          >
                            <Icon
                              aria-hidden="true"
                              color="currentColor"
                              focusable="false"
                              ml={-1}
                              mr={2}
                              name="small-add"
                            >
                              <Styled(div)
                                aria-hidden="true"
                                as="svg"
                                color="currentColor"
                                display="inline-block"
                                focusable="false"
                                ml={-1}
                                mr={2}
                                role="presentation"
                                size="1em"
                                verticalAlign="middle"
                                viewBox="0 0 20 20"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="css-yxiis9"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 20 20"
                                >
                                  <path
                                    d="M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"
                                    fill="currentColor"
                                    fillRule="evenodd"
                                  />
                                </svg>
                              </Styled(div)>
                            </Icon>
                          </ButtonIcon>
                          Add new timetable
                        </button>
                      </PseudoBox>
                    </Button>
                    <Box
                      key=".3"
                      mb={4}
                    >
                      <div
                        className="css-acwcvw"
                      >
                        <CopyTimetableButton
                          create={[Function]}
                          intoModification={
                            Object {
                              "_id": "1234",
                              "accessGroup": "accessGroupName",
                              "bidirectional": false,
                              "createdAt": "2017-11-08T12:30:50.133Z",
                              "createdBy": "person@gmail.com",
                              "description": "Mock description",
                              "entries": Array [],
                              "feed": "1",
                              "name": "Test Modification",
                              "nonce": "12345",
                              "projectId": "1",
                              "routes": Array [
                                "route1",
                              ],
                              "segments": Array [
                                Object {
                                  "fromStopId": "1",
                                  "geometry": Object {
                                    "coordinates": Array [
                                      Array [
                                        -122.0246,
                                        36.9707,
                                      ],
                                      Array [
                                        -122.0279,
                                        37.049,
                                      ],
                                      Array [
                                        -121.9799,
                                        37.2299,
                                      ],
                                      Array [
                                        -121.9445,
                                        37.324,
                                      ],
                                      Array [
                                        -121.936,
                                        37.353,
                                      ],
                                      Array [
                                        -121.924,
                                        37.365,
                                      ],
                                    ],
                                    "type": "LineString",
                                  },
                                  "spacing": 3000,
                                  "stopAtEnd": false,
                                  "stopAtStart": false,
                                  "toStopId": null,
                                },
                              ],
                              "timetables": Array [
                                Object {
                                  "_id": "timetable-id",
                                  "dwellTime": 10,
                                  "dwellTimes": Array [
                                    12,
                                  ],
                                  "endTime": 57600,
                                  "exactTimes": false,
                                  "friday": true,
                                  "headwaySecs": 900,
                                  "modificationId": "1234",
                                  "modificationName": "Test Modification",
                                  "monday": true,
                                  "name": "Test timetable",
                                  "patternTrips": Array [
                                    "abcd",
                                  ],
                                  "phaseAtStop": "",
                                  "phaseFromStop": "",
                                  "phaseFromTimetable": "",
                                  "phaseSeconds": 300,
                                  "saturday": false,
                                  "segmentSpeeds": Array [],
                                  "sourceTrip": "abcd",
                                  "startTime": 28800,
                                  "sunday": false,
                                  "thursday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                },
                              ],
                              "trips": Array [
                                "abcd",
                              ],
                              "type": "add-trip-pattern",
                              "updatedAt": "2017-11-08T12:31:19.602Z",
                              "updatedBy": "person@gmail.com",
                              "variants": Array [
                                true,
                              ],
                            }
                          }
                        >
                          <Button
                            isFullWidth={true}
                            leftIcon="copy"
                            onClick={[Function]}
                            variantColor="green"
                          >
                            <PseudoBox
                              _active={
                                Object {
                                  "bg": "green.700",
                                }
                              }
                              _disabled={
                                Object {
                                  "boxShadow": "none",
                                  "cursor": "not-allowed",
                                  "opacity": "40%",
                                }
                              }
                              _focus={
                                Object {
                                  "boxShadow": "outline",
                                }
                              }
                              _hover={
                                Object {
                                  "bg": "green.600",
                                }
                              }
                              alignItems="center"
                              appearance="none"
                              as="button"
                              bg="green.500"
                              borderRadius="md"
                              color="white"
                              display="inline-flex"
                              fontSize="md"
                              fontWeight="semibold"
                              height={10}
                              justifyContent="center"
                              lineHeight="1.2"
                              minWidth={10}
                              onClick={[Function]}
                              outline="none"
                              position="relative"
                              px={4}
                              transition="all 250ms"
                              type="button"
                              userSelect="none"
                              verticalAlign="middle"
                              whiteSpace="nowrap"
                              width="full"
                            >
                              <button
                                className="css-sci538"
                                onClick={[Function]}
                                type="button"
                              >
                                <ButtonIcon
                                  icon="copy"
                                  ml={-1}
                                  mr={2}
                                >
                                  <Icon
                                    aria-hidden="true"
                                    color="currentColor"
                                    focusable="false"
                                    ml={-1}
                                    mr={2}
                                    name="copy"
                                  >
                                    <Styled(div)
                                      aria-hidden="true"
                                      as="svg"
                                      color="currentColor"
                                      display="inline-block"
                                      focusable="false"
                                      ml={-1}
                                      mr={2}
                                      role="presentation"
                                      size="1em"
                                      verticalAlign="middle"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="css-yxiis9"
                                        focusable="false"
                                        role="presentation"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </Styled(div)>
                                  </Icon>
                                </ButtonIcon>
                                Copy existing timetable
                              </button>
                            </PseudoBox>
                          </Button>
                        </CopyTimetableButton>
                      </div>
                    </Box>
                    <TimetableComponent
                      key=".4:$timetable-0"
                      mb={null}
                      modificationStops={
                        Array [
                          Object {
                            "stop_id": "1:undefined",
                          },
                        ]
                      }
                      numberOfStops={16}
                      remove={[Function]}
                      segmentDistances={
                        Array [
                          45.20952310850887,
                        ]
                      }
                      timetable={
                        Object {
                          "_id": "timetable-id",
                          "dwellTime": 10,
                          "dwellTimes": Array [
                            12,
                          ],
                          "endTime": 57600,
                          "exactTimes": false,
                          "friday": true,
                          "headwaySecs": 900,
                          "modificationId": "1234",
                          "modificationName": "Test Modification",
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "phaseAtStop": "",
                          "phaseFromStop": "",
                          "phaseFromTimetable": "",
                          "phaseSeconds": 300,
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        }
                      }
                      update={[Function]}
                    >
                      <Collapsible
                        defaultExpanded={false}
                        heading={
                          <React.Fragment>
                            <Icon
                              icon={
                                Object {
                                  "icon": Array [],
                                  "iconName": "calendar",
                                  "prefix": "fas",
                                }
                              }
                            />
                            <strong>
                               
                              Test timetable
                            </strong>
                          </React.Fragment>
                        }
                      >
                        <Panel>
                          <Box
                            borderWidth="1px"
                            shadow="xs"
                          >
                            <div
                              className="css-1loeamy"
                            >
                              <Heading
                                onClick={[Function]}
                                style={
                                  Object {
                                    "cursor": "pointer",
                                  }
                                }
                              >
                                <Flex
                                  bg="gray.50"
                                  justify="space-between"
                                  onClick={[Function]}
                                  p={4}
                                  role="button"
                                  style={
                                    Object {
                                      "cursor": "pointer",
                                    }
                                  }
                                >
                                  <Box
                                    bg="gray.50"
                                    display="flex"
                                    justifyContent="space-between"
                                    onClick={[Function]}
                                    p={4}
                                    role="button"
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <div
                                      className="css-1eji9ql"
                                      onClick={[Function]}
                                      role="button"
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <Box>
                                        <div
                                          className="css-0"
                                        >
                                          <Icon
                                            icon={
                                              Object {
                                                "icon": Array [],
                                                "iconName": "calendar",
                                                "prefix": "fas",
                                              }
                                            }
                                          >
                                            <FontAwesomeIcon
                                              border={false}
                                              className=""
                                              fixedWidth={true}
                                              flip={null}
                                              icon={
                                                Object {
                                                  "icon": Array [],
                                                  "iconName": "calendar",
                                                  "prefix": "fas",
                                                }
                                              }
                                              inverse={false}
                                              listItem={false}
                                              mask={null}
                                              pull={null}
                                              pulse={false}
                                              rotation={null}
                                              size={null}
                                              spin={false}
                                              swapOpacity={false}
                                              symbol={false}
                                              title=""
                                              transform={null}
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="svg-inline--fa fa-calendar fa-w-NaN fa-fw "
                                                data-icon="calendar"
                                                data-prefix="fas"
                                                focusable="false"
                                                role="img"
                                                style={Object {}}
                                                viewBox="0 0 undefined undefined"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  fill="currentColor"
                                                  style={Object {}}
                                                />
                                              </svg>
                                            </FontAwesomeIcon>
                                          </Icon>
                                          <strong>
                                             
                                            Test timetable
                                          </strong>
                                        </div>
                                      </Box>
                                      <Box>
                                        <div
                                          className="css-0"
                                        >
                                          <Icon
                                            icon={
                                              Object {
                                                "icon": Array [],
                                                "iconName": "caret-right",
                                                "prefix": "fas",
                                              }
                                            }
                                          >
                                            <FontAwesomeIcon
                                              border={false}
                                              className=""
                                              fixedWidth={true}
                                              flip={null}
                                              icon={
                                                Object {
                                                  "icon": Array [],
                                                  "iconName": "caret-right",
                                                  "prefix": "fas",
                                                }
                                              }
                                              inverse={false}
                                              listItem={false}
                                              mask={null}
                                              pull={null}
                                              pulse={false}
                                              rotation={null}
                                              size={null}
                                              spin={false}
                                              swapOpacity={false}
                                              symbol={false}
                                              title=""
                                              transform={null}
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="svg-inline--fa fa-caret-right fa-w-NaN fa-fw "
                                                data-icon="caret-right"
                                                data-prefix="fas"
                                                focusable="false"
                                                role="img"
                                                style={Object {}}
                                                viewBox="0 0 undefined undefined"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  fill="currentColor"
                                                  style={Object {}}
                                                />
                                              </svg>
                                            </FontAwesomeIcon>
                                          </Icon>
                                        </div>
                                      </Box>
                                    </div>
                                  </Box>
                                </Flex>
                              </Heading>
                            </div>
                          </Box>
                        </Panel>
                      </Collapsible>
                    </TimetableComponent>
                  </div>
                </Box>
              </Flex>
            </ForwardRef>
          </Timetables>
        </div>
      </Box>
    </Flex>
  </ForwardRef>
</AddTripPattern>
`;
