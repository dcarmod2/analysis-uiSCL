// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component StopSelectPolygonTest snapshot(mount) 1`] = `
<StopSelectPolygonTest
  routeStops={
    Array [
      Object {
        "stop_id": "1",
        "stop_lat": 12,
        "stop_lon": 34,
        "stop_name": "mock gtfs stop",
      },
    ]
  }
  selectStops={[MockFunction]}
>
  <Map>
    <div>
      <StopSelectPolygon
        routeStops={
          Array [
            Object {
              "stop_id": "1",
              "stop_lat": 12,
              "stop_lon": 34,
              "stop_name": "mock gtfs stop",
            },
          ]
        }
        selectStops={[MockFunction]}
      >
        <DrawPolygon
          activateOnMount={true}
          onPolygon={[Function]}
        >
          <ForwardRef(Leaflet(FeatureGroup))>
            <FeatureGroup
              leaflet={
                Object {
                  "layerContainer": MapMock {
                    "_addLayers": [MockFunction],
                    "_addZoomLimit": [MockFunction],
                    "_animMoveEnd": [MockFunction],
                    "_animateZoom": [MockFunction],
                    "_catchTransitionEnd": [MockFunction],
                    "_checkIfLoaded": [MockFunction],
                    "_clearControlPos": [MockFunction],
                    "_clearHandlers": [MockFunction],
                    "_container": <div />,
                    "_createAnimProxy": [MockFunction],
                    "_createRenderer": [MockFunction],
                    "_destroyAnimProxy": [MockFunction],
                    "_draggableMoved": [MockFunction],
                    "_events": Object {
                      "move": Array [
                        Object {
                          "ctx": undefined,
                          "fn": [Function],
                        },
                      ],
                      "moveend": Array [
                        Object {
                          "ctx": undefined,
                          "fn": [Function],
                        },
                      ],
                    },
                    "_findEventTargets": [MockFunction],
                    "_fireDOMEvent": [MockFunction],
                    "_getBoundsCenterZoom": [MockFunction],
                    "_getBoundsOffset": [MockFunction],
                    "_getCenterLayerPoint": [MockFunction],
                    "_getCenterOffset": [MockFunction],
                    "_getMapPanePos": [MockFunction],
                    "_getNewPixelOrigin": [MockFunction],
                    "_getPaneRenderer": [MockFunction],
                    "_getTopLeftPoint": [MockFunction],
                    "_getZoomSpan": [MockFunction],
                    "_handleDOMEvent": [MockFunction],
                    "_handleGeolocationError": [MockFunction],
                    "_handleGeolocationResponse": [MockFunction],
                    "_initContainer": [MockFunction],
                    "_initControlPos": [MockFunction],
                    "_initEvents": [MockFunction],
                    "_initLayout": [MockFunction],
                    "_initPanes": [MockFunction],
                    "_latLngBoundsToNewLayerBounds": [MockFunction],
                    "_latLngToNewLayerPoint": [MockFunction],
                    "_limitCenter": [MockFunction],
                    "_limitOffset": [MockFunction],
                    "_limitZoom": [MockFunction],
                    "_move": [MockFunction],
                    "_moveEnd": [MockFunction],
                    "_moveStart": [MockFunction],
                    "_moved": [MockFunction],
                    "_nothingToAnimate": [MockFunction],
                    "_off": [Function],
                    "_on": [Function],
                    "_onMoveEnd": [MockFunction],
                    "_onPanTransitionEnd": [MockFunction],
                    "_onPanTransitionStep": [MockFunction],
                    "_onResize": [MockFunction],
                    "_onScroll": [MockFunction],
                    "_onZoomTransitionEnd": [MockFunction],
                    "_panInsideMaxBounds": [MockFunction],
                    "_propagateEvent": [Function],
                    "_rawPanBy": [MockFunction],
                    "_rebound": [MockFunction],
                    "_removeZoomLimit": [MockFunction],
                    "_resetView": [MockFunction],
                    "_stop": [MockFunction],
                    "_tryAnimatedPan": [MockFunction],
                    "_tryAnimatedZoom": [MockFunction],
                    "_updateZoomLevels": [MockFunction],
                    "addControl": [MockFunction],
                    "addEventListener": [Function],
                    "addEventParent": [Function],
                    "addHandler": [MockFunction],
                    "addLayer": [MockFunction] {
                      "calls": Array [
                        Array [
                          NewClass {},
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "addOneTimeEventListener": [Function],
                    "callInitHooks": [MockFunction],
                    "clearAllEventListeners": [Function],
                    "closePopup": [MockFunction],
                    "closeTooltip": [MockFunction],
                    "containerPointToLatLng": [MockFunction],
                    "containerPointToLayerPoint": [MockFunction],
                    "createPane": [MockFunction],
                    "distance": [MockFunction],
                    "eachLayer": [MockFunction],
                    "fire": [Function],
                    "fireEvent": [Function],
                    "fitBounds": [MockFunction],
                    "fitWorld": [MockFunction],
                    "flyTo": [MockFunction],
                    "flyToBounds": [MockFunction],
                    "getBounds": [MockFunction],
                    "getBoundsZoom": [MockFunction],
                    "getCenter": [MockFunction],
                    "getContainer": [MockFunction],
                    "getMaxZoom": [MockFunction],
                    "getMinZoom": [MockFunction],
                    "getPane": [MockFunction],
                    "getPanes": [MockFunction],
                    "getPixelBounds": [MockFunction],
                    "getPixelOrigin": [MockFunction],
                    "getPixelWorldBounds": [MockFunction],
                    "getRenderer": [MockFunction],
                    "getScaleZoom": [MockFunction],
                    "getSize": [MockFunction],
                    "getZoom": [MockFunction],
                    "getZoomScale": [MockFunction],
                    "hasEventListeners": [Function],
                    "hasLayer": [MockFunction],
                    "initialize": [MockFunction],
                    "invalidateSize": [MockFunction],
                    "latLngToContainerPoint": [MockFunction],
                    "latLngToLayerPoint": [MockFunction],
                    "layerPointToContainerPoint": [MockFunction],
                    "layerPointToLatLng": [MockFunction],
                    "listens": [Function],
                    "locate": [MockFunction],
                    "mouseEventToContainerPoint": [MockFunction],
                    "mouseEventToLatLng": [MockFunction],
                    "mouseEventToLayerPoint": [MockFunction],
                    "off": [Function],
                    "on": [Function],
                    "once": [Function],
                    "openPopup": [MockFunction],
                    "openTooltip": [MockFunction],
                    "options": Object {
                      "attributionControl": true,
                      "bounceAtZoomLimits": true,
                      "boxZoom": true,
                      "center": undefined,
                      "closePopupOnClick": true,
                      "crs": Object {
                        "R": 6371000,
                        "code": "EPSG:3857",
                        "distance": [Function],
                        "getProjectedBounds": [Function],
                        "infinite": false,
                        "latLngToPoint": [Function],
                        "pointToLatLng": [Function],
                        "project": [Function],
                        "projection": Object {
                          "MAX_LATITUDE": 85.0511287798,
                          "R": 6378137,
                          "bounds": Object {
                            "max": Object {
                              "x": 20037508.342789244,
                              "y": 20037508.342789244,
                            },
                            "min": Object {
                              "x": -20037508.342789244,
                              "y": -20037508.342789244,
                            },
                          },
                          "project": [Function],
                          "unproject": [Function],
                        },
                        "scale": [Function],
                        "transformation": Object {
                          "_a": 2.495320233665337e-8,
                          "_b": 0.5,
                          "_c": -2.495320233665337e-8,
                          "_d": 0.5,
                        },
                        "unproject": [Function],
                        "wrapLatLng": [Function],
                        "wrapLatLngBounds": [Function],
                        "wrapLng": Array [
                          -180,
                          180,
                        ],
                        "zoom": [Function],
                      },
                      "doubleClickZoom": true,
                      "dragging": true,
                      "easeLinearity": 0.2,
                      "fadeAnimation": true,
                      "inertia": true,
                      "inertiaDeceleration": 3400,
                      "inertiaMaxSpeed": Infinity,
                      "keyboard": true,
                      "keyboardPanDelta": 80,
                      "layers": Array [],
                      "markerZoomAnimation": true,
                      "maxBounds": undefined,
                      "maxBoundsViscosity": 0,
                      "maxZoom": undefined,
                      "minZoom": undefined,
                      "renderer": undefined,
                      "scrollWheelZoom": true,
                      "tap": true,
                      "tapTolerance": 15,
                      "touchZoom": undefined,
                      "trackResize": true,
                      "transform3DLimit": 8388608,
                      "wheelDebounceTime": 40,
                      "wheelPxPerZoomLevel": 60,
                      "worldCopyJump": false,
                      "zoom": undefined,
                      "zoomAnimation": true,
                      "zoomAnimationThreshold": 4,
                      "zoomControl": true,
                      "zoomDelta": 1,
                      "zoomSnap": 1,
                    },
                    "panBy": [MockFunction],
                    "panInside": [MockFunction],
                    "panInsideBounds": [MockFunction],
                    "panTo": [MockFunction],
                    "project": [MockFunction],
                    "remove": [MockFunction],
                    "removeControl": [MockFunction],
                    "removeEventListener": [Function],
                    "removeEventParent": [Function],
                    "removeLayer": [MockFunction],
                    "setMaxBounds": [MockFunction],
                    "setMaxZoom": [MockFunction],
                    "setMinZoom": [MockFunction],
                    "setView": [MockFunction],
                    "setZoom": [MockFunction],
                    "setZoomAround": [MockFunction],
                    "stop": [MockFunction],
                    "stopLocate": [MockFunction],
                    "unproject": [MockFunction],
                    "whenReady": [MockFunction],
                    "wrapLatLng": [MockFunction],
                    "wrapLatLngBounds": [MockFunction],
                    "zoomIn": [MockFunction],
                    "zoomOut": [MockFunction],
                  },
                  "map": MapMock {
                    "_addLayers": [MockFunction],
                    "_addZoomLimit": [MockFunction],
                    "_animMoveEnd": [MockFunction],
                    "_animateZoom": [MockFunction],
                    "_catchTransitionEnd": [MockFunction],
                    "_checkIfLoaded": [MockFunction],
                    "_clearControlPos": [MockFunction],
                    "_clearHandlers": [MockFunction],
                    "_container": <div />,
                    "_createAnimProxy": [MockFunction],
                    "_createRenderer": [MockFunction],
                    "_destroyAnimProxy": [MockFunction],
                    "_draggableMoved": [MockFunction],
                    "_events": Object {
                      "move": Array [
                        Object {
                          "ctx": undefined,
                          "fn": [Function],
                        },
                      ],
                      "moveend": Array [
                        Object {
                          "ctx": undefined,
                          "fn": [Function],
                        },
                      ],
                    },
                    "_findEventTargets": [MockFunction],
                    "_fireDOMEvent": [MockFunction],
                    "_getBoundsCenterZoom": [MockFunction],
                    "_getBoundsOffset": [MockFunction],
                    "_getCenterLayerPoint": [MockFunction],
                    "_getCenterOffset": [MockFunction],
                    "_getMapPanePos": [MockFunction],
                    "_getNewPixelOrigin": [MockFunction],
                    "_getPaneRenderer": [MockFunction],
                    "_getTopLeftPoint": [MockFunction],
                    "_getZoomSpan": [MockFunction],
                    "_handleDOMEvent": [MockFunction],
                    "_handleGeolocationError": [MockFunction],
                    "_handleGeolocationResponse": [MockFunction],
                    "_initContainer": [MockFunction],
                    "_initControlPos": [MockFunction],
                    "_initEvents": [MockFunction],
                    "_initLayout": [MockFunction],
                    "_initPanes": [MockFunction],
                    "_latLngBoundsToNewLayerBounds": [MockFunction],
                    "_latLngToNewLayerPoint": [MockFunction],
                    "_limitCenter": [MockFunction],
                    "_limitOffset": [MockFunction],
                    "_limitZoom": [MockFunction],
                    "_move": [MockFunction],
                    "_moveEnd": [MockFunction],
                    "_moveStart": [MockFunction],
                    "_moved": [MockFunction],
                    "_nothingToAnimate": [MockFunction],
                    "_off": [Function],
                    "_on": [Function],
                    "_onMoveEnd": [MockFunction],
                    "_onPanTransitionEnd": [MockFunction],
                    "_onPanTransitionStep": [MockFunction],
                    "_onResize": [MockFunction],
                    "_onScroll": [MockFunction],
                    "_onZoomTransitionEnd": [MockFunction],
                    "_panInsideMaxBounds": [MockFunction],
                    "_propagateEvent": [Function],
                    "_rawPanBy": [MockFunction],
                    "_rebound": [MockFunction],
                    "_removeZoomLimit": [MockFunction],
                    "_resetView": [MockFunction],
                    "_stop": [MockFunction],
                    "_tryAnimatedPan": [MockFunction],
                    "_tryAnimatedZoom": [MockFunction],
                    "_updateZoomLevels": [MockFunction],
                    "addControl": [MockFunction],
                    "addEventListener": [Function],
                    "addEventParent": [Function],
                    "addHandler": [MockFunction],
                    "addLayer": [MockFunction] {
                      "calls": Array [
                        Array [
                          NewClass {},
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "addOneTimeEventListener": [Function],
                    "callInitHooks": [MockFunction],
                    "clearAllEventListeners": [Function],
                    "closePopup": [MockFunction],
                    "closeTooltip": [MockFunction],
                    "containerPointToLatLng": [MockFunction],
                    "containerPointToLayerPoint": [MockFunction],
                    "createPane": [MockFunction],
                    "distance": [MockFunction],
                    "eachLayer": [MockFunction],
                    "fire": [Function],
                    "fireEvent": [Function],
                    "fitBounds": [MockFunction],
                    "fitWorld": [MockFunction],
                    "flyTo": [MockFunction],
                    "flyToBounds": [MockFunction],
                    "getBounds": [MockFunction],
                    "getBoundsZoom": [MockFunction],
                    "getCenter": [MockFunction],
                    "getContainer": [MockFunction],
                    "getMaxZoom": [MockFunction],
                    "getMinZoom": [MockFunction],
                    "getPane": [MockFunction],
                    "getPanes": [MockFunction],
                    "getPixelBounds": [MockFunction],
                    "getPixelOrigin": [MockFunction],
                    "getPixelWorldBounds": [MockFunction],
                    "getRenderer": [MockFunction],
                    "getScaleZoom": [MockFunction],
                    "getSize": [MockFunction],
                    "getZoom": [MockFunction],
                    "getZoomScale": [MockFunction],
                    "hasEventListeners": [Function],
                    "hasLayer": [MockFunction],
                    "initialize": [MockFunction],
                    "invalidateSize": [MockFunction],
                    "latLngToContainerPoint": [MockFunction],
                    "latLngToLayerPoint": [MockFunction],
                    "layerPointToContainerPoint": [MockFunction],
                    "layerPointToLatLng": [MockFunction],
                    "listens": [Function],
                    "locate": [MockFunction],
                    "mouseEventToContainerPoint": [MockFunction],
                    "mouseEventToLatLng": [MockFunction],
                    "mouseEventToLayerPoint": [MockFunction],
                    "off": [Function],
                    "on": [Function],
                    "once": [Function],
                    "openPopup": [MockFunction],
                    "openTooltip": [MockFunction],
                    "options": Object {
                      "attributionControl": true,
                      "bounceAtZoomLimits": true,
                      "boxZoom": true,
                      "center": undefined,
                      "closePopupOnClick": true,
                      "crs": Object {
                        "R": 6371000,
                        "code": "EPSG:3857",
                        "distance": [Function],
                        "getProjectedBounds": [Function],
                        "infinite": false,
                        "latLngToPoint": [Function],
                        "pointToLatLng": [Function],
                        "project": [Function],
                        "projection": Object {
                          "MAX_LATITUDE": 85.0511287798,
                          "R": 6378137,
                          "bounds": Object {
                            "max": Object {
                              "x": 20037508.342789244,
                              "y": 20037508.342789244,
                            },
                            "min": Object {
                              "x": -20037508.342789244,
                              "y": -20037508.342789244,
                            },
                          },
                          "project": [Function],
                          "unproject": [Function],
                        },
                        "scale": [Function],
                        "transformation": Object {
                          "_a": 2.495320233665337e-8,
                          "_b": 0.5,
                          "_c": -2.495320233665337e-8,
                          "_d": 0.5,
                        },
                        "unproject": [Function],
                        "wrapLatLng": [Function],
                        "wrapLatLngBounds": [Function],
                        "wrapLng": Array [
                          -180,
                          180,
                        ],
                        "zoom": [Function],
                      },
                      "doubleClickZoom": true,
                      "dragging": true,
                      "easeLinearity": 0.2,
                      "fadeAnimation": true,
                      "inertia": true,
                      "inertiaDeceleration": 3400,
                      "inertiaMaxSpeed": Infinity,
                      "keyboard": true,
                      "keyboardPanDelta": 80,
                      "layers": Array [],
                      "markerZoomAnimation": true,
                      "maxBounds": undefined,
                      "maxBoundsViscosity": 0,
                      "maxZoom": undefined,
                      "minZoom": undefined,
                      "renderer": undefined,
                      "scrollWheelZoom": true,
                      "tap": true,
                      "tapTolerance": 15,
                      "touchZoom": undefined,
                      "trackResize": true,
                      "transform3DLimit": 8388608,
                      "wheelDebounceTime": 40,
                      "wheelPxPerZoomLevel": 60,
                      "worldCopyJump": false,
                      "zoom": undefined,
                      "zoomAnimation": true,
                      "zoomAnimationThreshold": 4,
                      "zoomControl": true,
                      "zoomDelta": 1,
                      "zoomSnap": 1,
                    },
                    "panBy": [MockFunction],
                    "panInside": [MockFunction],
                    "panInsideBounds": [MockFunction],
                    "panTo": [MockFunction],
                    "project": [MockFunction],
                    "remove": [MockFunction],
                    "removeControl": [MockFunction],
                    "removeEventListener": [Function],
                    "removeEventParent": [Function],
                    "removeLayer": [MockFunction],
                    "setMaxBounds": [MockFunction],
                    "setMaxZoom": [MockFunction],
                    "setMinZoom": [MockFunction],
                    "setView": [MockFunction],
                    "setZoom": [MockFunction],
                    "setZoomAround": [MockFunction],
                    "stop": [MockFunction],
                    "stopLocate": [MockFunction],
                    "unproject": [MockFunction],
                    "whenReady": [MockFunction],
                    "wrapLatLng": [MockFunction],
                    "wrapLatLngBounds": [MockFunction],
                    "zoomIn": [MockFunction],
                    "zoomOut": [MockFunction],
                  },
                }
              }
            >
              <Component
                draw={
                  Object {
                    "circle": false,
                    "circlemarker": false,
                    "marker": false,
                    "polygon": true,
                    "polyline": false,
                    "rectangle": false,
                  }
                }
                onCreated={[Function]}
                position="bottomright"
              />
            </FeatureGroup>
          </ForwardRef(Leaflet(FeatureGroup))>
        </DrawPolygon>
      </StopSelectPolygon>
    </div>
  </Map>
</StopSelectPolygonTest>
`;
