// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > VariantEditor renders correctly 1`] = `
<Memo(Variants)
  createVariant={[MockFunction]}
  deleteVariant={[MockFunction]}
  editVariantName={[MockFunction]}
  showVariant={[MockFunction]}
  variants={Array []}
>
  <Box
    p={2}
  >
    <div
      className="css-olyig7"
    >
      <Button
        isFullWidth={true}
        leftIcon="small-add"
        onClick={[Function]}
        variantColor="green"
      >
        <PseudoBox
          _active={
            Object {
              "bg": "green.700",
            }
          }
          _disabled={
            Object {
              "boxShadow": "none",
              "cursor": "not-allowed",
              "opacity": "40%",
            }
          }
          _focus={
            Object {
              "boxShadow": "outline",
            }
          }
          _hover={
            Object {
              "bg": "green.600",
            }
          }
          alignItems="center"
          appearance="none"
          as="button"
          bg="green.500"
          borderRadius="md"
          color="white"
          display="inline-flex"
          fontSize="md"
          fontWeight="semibold"
          height={10}
          justifyContent="center"
          lineHeight="1.2"
          minWidth={10}
          onClick={[Function]}
          outline="none"
          position="relative"
          px={4}
          transition="all 250ms"
          type="button"
          userSelect="none"
          verticalAlign="middle"
          whiteSpace="nowrap"
          width="full"
        >
          <button
            className="css-sci538"
            onClick={[Function]}
            type="button"
          >
            <ButtonIcon
              icon="small-add"
              ml={-1}
              mr={2}
            >
              <Icon
                aria-hidden="true"
                color="currentColor"
                focusable="false"
                ml={-1}
                mr={2}
                name="small-add"
              >
                <Styled(div)
                  aria-hidden="true"
                  as="svg"
                  color="currentColor"
                  display="inline-block"
                  focusable="false"
                  ml={-1}
                  mr={2}
                  role="presentation"
                  size="1em"
                  verticalAlign="middle"
                  viewBox="0 0 20 20"
                >
                  <svg
                    aria-hidden="true"
                    className="css-yxiis9"
                    focusable="false"
                    role="presentation"
                    viewBox="0 0 20 20"
                  >
                    <path
                      d="M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"
                      fill="currentColor"
                      fillRule="evenodd"
                    />
                  </svg>
                </Styled(div)>
              </Icon>
            </ButtonIcon>
            Create a scenario
          </button>
        </PseudoBox>
      </Button>
    </div>
  </Box>
  <ForwardRef
    py={2}
  >
    <Flex
      direction="column"
      py={2}
    >
      <Box
        display="flex"
        flexDirection="column"
        py={2}
      >
        <div
          className="css-17oo1d2"
        >
          <Text
            key=".0"
            mb={2}
            px={4}
            py={2}
          >
            <Box
              as="p"
              fontFamily="body"
              mb={2}
              px={4}
              py={2}
            >
              <p
                className="css-srcs0l"
              >
                A Scenario is a collection of modifications within a project.
              </p>
            </Box>
          </Text>
          <ForwardRef
            key=".1"
            mb={2}
            mx={4}
          >
            <Box
              as="hr"
              border="0"
              borderBottom="0.0625rem solid"
              borderColor="inherit"
              mb={2}
              mx={4}
              my={2}
              opacity="0.6"
              width="auto"
            >
              <hr
                className="css-1s2m7jw"
              />
            </Box>
          </ForwardRef>
          <InnerDock
            key=".2"
            mb={null}
          >
            <SimpleBar
              className="InnerDock "
              style={
                Object {
                  "height": 768,
                }
              }
            >
              <div
                className="InnerDock "
                data-simplebar={true}
                style={
                  Object {
                    "height": 768,
                  }
                }
              >
                <div
                  className="simplebar-wrapper"
                >
                  <div
                    className="simplebar-height-auto-observer-wrapper"
                  >
                    <div
                      className="simplebar-height-auto-observer"
                    />
                  </div>
                  <div
                    className="simplebar-mask"
                  >
                    <div
                      className="simplebar-offset"
                    >
                      <div
                        className="simplebar-content-wrapper"
                      >
                        <div
                          className="simplebar-content"
                        >
                          <ForwardRef
                            id="scenarios"
                            pl={4}
                            pr={2}
                            pt={2}
                            spacing={3}
                          >
                            <Flex
                              direction="column"
                              id="scenarios"
                              pl={4}
                              pr={2}
                              pt={2}
                            >
                              <Box
                                display="flex"
                                flexDirection="column"
                                id="scenarios"
                                pl={4}
                                pr={2}
                                pt={2}
                              >
                                <div
                                  className="css-1pygc6s"
                                  id="scenarios"
                                >
                                  <Flex
                                    key=".0"
                                    mb={null}
                                    pr={2}
                                  >
                                    <Box
                                      display="flex"
                                      mb={null}
                                      pr={2}
                                    >
                                      <div
                                        className="css-1pjcatt"
                                      >
                                        <Text
                                          flex="1"
                                          fontWeight="bold"
                                        >
                                          <Box
                                            as="p"
                                            flex="1"
                                            fontFamily="body"
                                            fontWeight="bold"
                                          >
                                            <p
                                              className="css-13c2z23"
                                            >
                                              Baseline
                                            </p>
                                          </Box>
                                        </Text>
                                        <Tip
                                          label="Baseline (empty scenario) cannot be modified"
                                        >
                                          <Tooltip
                                            aria-label="Tooltip: Baseline (empty scenario) cannot be modified"
                                            fontSize="md"
                                            hasArrow={true}
                                            label="Baseline (empty scenario) cannot be modified"
                                            zIndex={1500}
                                          >
                                            <Icon
                                              mr={1}
                                              name="lock"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                            >
                                              <Styled(div)
                                                as="svg"
                                                color="currentColor"
                                                display="inline-block"
                                                focusable={false}
                                                mr={1}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                role="presentation"
                                                size="1em"
                                                verticalAlign="middle"
                                                viewBox="0 0 24 24"
                                              >
                                                <svg
                                                  className="css-11vxqx9"
                                                  focusable={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              </Styled(div)>
                                            </Icon>
                                            <ForwardRef
                                              anchorEl={
                                                <svg
                                                  class="css-11vxqx9"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z"
                                                    fill="currentColor"
                                                  />
                                                </svg>
                                              }
                                              arrowSize="10px"
                                              bg="gray.700"
                                              borderRadius="sm"
                                              color="whiteAlpha.900"
                                              fontSize="md"
                                              fontWeight="medium"
                                              hasArrow={true}
                                              isOpen={false}
                                              maxW="320px"
                                              modifiers={
                                                Object {
                                                  "offset": Object {
                                                    "enabled": true,
                                                    "offset": "0, 8",
                                                  },
                                                }
                                              }
                                              placement="auto"
                                              pointerEvents="none"
                                              px="8px"
                                              py="2px"
                                              shadow="md"
                                              timeout={200}
                                              usePortal={true}
                                              zIndex={1500}
                                            />
                                          </Tooltip>
                                        </Tip>
                                      </div>
                                    </Box>
                                  </Flex>
                                </div>
                              </Box>
                            </Flex>
                          </ForwardRef>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className="simplebar-placeholder"
                  />
                </div>
                <div
                  className="simplebar-track simplebar-horizontal"
                >
                  <div
                    className="simplebar-scrollbar"
                  />
                </div>
                <div
                  className="simplebar-track simplebar-vertical"
                >
                  <div
                    className="simplebar-scrollbar"
                  />
                </div>
              </div>
            </SimpleBar>
          </InnerDock>
        </div>
      </Box>
    </Flex>
  </ForwardRef>
</Memo(Variants)>
`;
