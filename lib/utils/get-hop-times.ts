/** given an array of stops from getStops and a speed in kilometers per hour, compute hop times */

export default function getHopTimes(stops, segmentSpeeds) {
  const hopTimes = []

  for (let i = 1; i < stops.length; i++) {
    const hopDistMeters =
      stops[i].distanceFromStart - stops[i - 1].distanceFromStart
    // stops[i].index != i because autogenerated stops will all have the same segment index
    // and we want to use the speed from the segment leaving the previous stop
    const hopTimeSeconds =
      (hopDistMeters / (segmentSpeeds[stops[i - 1].index] * 1000)) * 3600

    // use math.round to avoid accumulating error, the expectation will be 0 as half are rounded up and half down
    hopTimes.push(Math.round(hopTimeSeconds))
  }

  return hopTimes
}
